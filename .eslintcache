[{"C:\\Users\\Daniel Raz\\Desktop\\majordomo\\src\\index.js":"1","C:\\Users\\Daniel Raz\\Desktop\\majordomo\\src\\config\\firebaseConfig.js":"2","C:\\Users\\Daniel Raz\\Desktop\\majordomo\\src\\pages\\login page\\LoginPage.js":"3","C:\\Users\\Daniel Raz\\Desktop\\majordomo\\src\\pages\\Main user page\\MainUserPage.js":"4","C:\\Users\\Daniel Raz\\Desktop\\majordomo\\src\\Dictionary.js":"5"},{"size":218,"mtime":1608117662368,"results":"6","hashOfConfig":"7"},{"size":661,"mtime":1608115850012,"results":"8","hashOfConfig":"7"},{"size":6172,"mtime":1608238182083,"results":"9","hashOfConfig":"7"},{"size":660,"mtime":1608140873505,"results":"10","hashOfConfig":"7"},{"size":2723,"mtime":1608481158705,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"hupcg5",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"14"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"14"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Daniel Raz\\Desktop\\majordomo\\src\\index.js",[],["26","27"],"C:\\Users\\Daniel Raz\\Desktop\\majordomo\\src\\config\\firebaseConfig.js",["28"],"import  firebase from 'firebase'\r\nimport 'firebase/auth';\r\n\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBZN7e1k3080ug33Mozfe6kowulXLH0ADw\",\r\n    authDomain: \"majordomo-me.firebaseapp.com\",\r\n    databaseURL: \"https://majordomo-me-default-rtdb.firebaseio.com\",\r\n    projectId: \"majordomo-me\",\r\n    storageBucket: \"majordomo-me.appspot.com\",\r\n    messagingSenderId: \"213314761996\",\r\n    appId: \"1:213314761996:web:e9c6d9737bf213952c0529\",\r\n    measurementId: \"G-1X8TL73123\"\r\n  };\r\n\r\n  firebase.initializeApp(firebaseConfig);\r\n  export const auth = firebase.auth();\r\n\r\nexport default{firebase};","C:\\Users\\Daniel Raz\\Desktop\\majordomo\\src\\pages\\login page\\LoginPage.js",["29","30","31","32"],"import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport './LoginPage.css';\r\nimport $ from 'jquery';\r\nimport { auth } from '../../config/firebaseConfig';\r\nimport MainUserPage from '../Main user page/MainUserPage'\r\nimport {Dictionary, LangBtn} from '../../Dictionary'\r\nimport { validate } from 'jquery-validation';\r\n// require('jquery-validation');\r\n\r\n\r\n\r\nclass LoginPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.login = this.login.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.state = {\r\n            email: {},\r\n            password: {},\r\n        }\r\n    }\r\n\r\n    login(e) {\r\n        e.preventDefault();\r\n        $(\"#login_form\").validate({\r\n            // Specify validation rules\r\n            rules: {\r\n                email: {\r\n                    required: true,\r\n                    minlength: 1,\r\n                    email: true,\r\n                },\r\n                password: {\r\n                    required: true,\r\n                    minlength: 1,\r\n                },\r\n            },\r\n            messages: {}\r\n        });\r\n\r\n        if (!$(\"#login_form\").valid()) return;\r\n        auth.signInWithEmailAndPassword(this.state.email, this.state.password).then(() => {\r\n            window.location.reload();\r\n        }).catch(function (error) {\r\n            var errorCode = error.code;\r\n            var errorMessage = error.message;\r\n            alert(errorCode + \" : \" + errorMessage);\r\n            $(\"#password\").val(\"\");\r\n        });\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"LPcover\" className=\"cover\">\r\n                <LangBtn/>\r\n                <div id=\"loginWrapper\" className=\"wrapper\">\r\n                    <div className=\"loginContainer\">\r\n                        \r\n                        <div id=\"buttonWrapper123\">\r\n                            <form dir=\"RTL\" id=\"login_form\" name=\"login_form_name\" role=\"form\">\r\n                                < input type=\"email\"\r\n                                    id=\"email\"\r\n                                    name=\"email\"\r\n                                    placeholder={Dictionary.enterMail}\r\n                                    autoComplete='off'\r\n                                    defaultValue=\"\" required\r\n                                    onChange={this.handleChange}>\r\n                                </input>\r\n                                <a>‚Äè </a>\r\n                                < input type=\"password\"\r\n                                    id=\"password\"\r\n                                    name=\"password\"\r\n                                    placeholder={Dictionary.enterPass}\r\n                                    autoComplete='off'\r\n                                    defaultValue=\"\" required\r\n                                    onChange={this.handleChange}\r\n                                >\r\n                                </input>\r\n                                <button id=\"loginbtn\"\r\n                                    type=\"submit\"\r\n                                    text={Dictionary.login}\r\n                                    className=\"btn btn-success\"\r\n                                    onClick={this.login} >\r\n                                    {Dictionary.login}\r\n                                </button>\r\n                            </form>\r\n                        </div>\r\n                        <img src =\"http://up419.siz.co.il/up2/ljmkmijir2yn.png\"></img>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default LoginPage;\r\n\r\n\r\n\r\nexport class LoginComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: false,\r\n            page: [],\r\n            permission: false,\r\n        }\r\n\r\n    }\r\n\r\n    // authListener() {\r\n    //     auth.onAuthStateChanged((user) => {\r\n    //         if (user) this.setState({ user });\r\n    //         else this.setState({ user: false });\r\n    //         console.log(user)\r\n    //     })\r\n    // }\r\n\r\n    // signOutFun() {\r\n    //     auth.signOut();\r\n    // }\r\n    timeRefresh() {\r\n        //reset page to main page if page is inactive for a half an hour\r\n        var time = new Date().getTime();\r\n        $(document.body).bind(\"mousemove keypress touchmove \", function () {\r\n            time = new Date().getTime();\r\n        });\r\n\r\n        setInterval(function () {\r\n            if ((new Date().getTime() - time >= 180000)) {\r\n                window.location.href = \"/\";\r\n            }\r\n        }, 1000);\r\n    }\r\n\r\n    componentDidMount() {\r\n        auth.onAuthStateChanged(user => {\r\n            console.log(user)\r\n            if (user){\r\n                this.renderAdminDiv(user)\r\n            }\r\n            else\r\n            this.setState({page:<LoginPage/>})\r\n        })\r\n\r\n    }\r\n\r\n    renderAdminDiv(user) {\r\n        \r\n       \r\n        ReactDOM.render(\r\n            <Router>\r\n                {/* <Route exact path=\"/\" component={() => <AdminPage Admin={this.state.permission} />} />\r\n                <Route path=\"/WomanPage/:id\" component={props => <WomanPage {...props} Admin={this.state.permission} />} />\r\n                <Route path=\"/Category\" component={() => <Category Admin={this.state.permission} />} /> */}\r\n                <Route exect path=\"/\" component={() => <MainUserPage Admin={this.state.permission} />}/>\r\n            </Router>, document.getElementById('root')\r\n        );\r\n    }\r\n\r\n    renderVisitorDiv(user) {\r\n        this.timeRefresh();\r\n        ReactDOM.render(\r\n            <Router>\r\n                <Route exact path=\"/\" component={MainUserPage} />\r\n                {/* <Route path=\"/WomanPage/:id\" component={props => <WomanPage {...props} />} />\r\n                <Route path=\"/Category\" component={Category} /> */}\r\n            </Router>, document.getElementById('root')\r\n        );\r\n    }\r\n\r\n    render() {\r\n\r\n        return <div id=\"renderDiv\"> {this.state.page}</div>\r\n\r\n    }\r\n}\r\n","C:\\Users\\Daniel Raz\\Desktop\\majordomo\\src\\pages\\Main user page\\MainUserPage.js",["33","34"],"import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Dictionary, LangBtn } from '../../Dictionary'\r\nimport { auth } from '../../config/firebaseConfig'\r\n\r\nclass MainUserPage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                Hello World\r\n                <LangBtn />\r\n                <button id=\"logoutBtn\" onClick={() => {\r\n                    auth.signOut()\r\n                    window.location.reload()\r\n                }} >{Dictionary.signOut}</button>\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\nexport default MainUserPage","C:\\Users\\Daniel Raz\\Desktop\\majordomo\\src\\Dictionary.js",["35"],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":19,"column":1,"nodeType":"42","endLine":19,"endColumn":26},{"ruleId":"43","severity":1,"message":"44","line":9,"column":10,"nodeType":"45","messageId":"46","endLine":9,"endColumn":18},{"ruleId":"47","severity":1,"message":"48","line":66,"column":29,"nodeType":"49","endLine":66,"endColumn":96},{"ruleId":"50","severity":1,"message":"51","line":75,"column":33,"nodeType":"49","endLine":75,"endColumn":36},{"ruleId":"52","severity":1,"message":"53","line":94,"column":25,"nodeType":"49","endLine":94,"endColumn":81},{"ruleId":"43","severity":1,"message":"54","line":2,"column":8,"nodeType":"45","messageId":"46","endLine":2,"endColumn":16},{"ruleId":"55","severity":1,"message":"56","line":8,"column":5,"nodeType":"57","messageId":"58","endLine":11,"endColumn":6},{"ruleId":"50","severity":1,"message":"51","line":83,"column":15,"nodeType":"49","endLine":83,"endColumn":42},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'validate' is defined but never used.","Identifier","unusedVar","jsx-a11y/no-redundant-roles","The element form has an implicit role of form. Defining this explicitly is redundant and should be avoided.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'ReactDOM' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation"]