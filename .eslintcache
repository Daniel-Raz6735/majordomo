[{"C:\\Users\\shlomo\\Desktop\\majordomo\\src\\index.js":"1","C:\\Users\\shlomo\\Desktop\\majordomo\\src\\pages\\login page\\LoginPage.js":"2","C:\\Users\\shlomo\\Desktop\\majordomo\\src\\Dictionary.js":"3","C:\\Users\\shlomo\\Desktop\\majordomo\\src\\config\\firebaseConfig.js":"4","C:\\Users\\shlomo\\Desktop\\majordomo\\src\\pages\\Main user page\\MainUserPage.js":"5","C:\\Users\\shlomo\\Desktop\\majordomo\\src\\components\\containers.jsx":"6"},{"size":227,"mtime":1610459349632,"results":"7","hashOfConfig":"8"},{"size":6164,"mtime":1610628469884,"results":"9","hashOfConfig":"8"},{"size":3180,"mtime":1610561904060,"results":"10","hashOfConfig":"8"},{"size":661,"mtime":1610459349628,"results":"11","hashOfConfig":"8"},{"size":3570,"mtime":1610628506251,"results":"12","hashOfConfig":"8"},{"size":4499,"mtime":1610613388151,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"17ximuj",{"filePath":"17","messages":"18","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"16"},"C:\\Users\\shlomo\\Desktop\\majordomo\\src\\index.js",[],["30","31"],"C:\\Users\\shlomo\\Desktop\\majordomo\\src\\pages\\login page\\LoginPage.js",["32","33","34","35","36","37"],"C:\\Users\\shlomo\\Desktop\\majordomo\\src\\Dictionary.js",["38","39","40"],"import React from 'react';\r\nimport LocalizedStrings from 'react-localization';\r\nimport Dropdown, { DropdownContent, DropdownTrigger } from 'react-simple-dropdown';\r\nimport './Dictionary.css';\r\nimport globe from './images/globe.png';\r\nimport israelFlag from './images/icons/israel.svg';\r\nimport usaFlag from './images/icons/USA.svg';\r\n\r\n\r\n/* LocalizedStrings is holding our Dictionary so that all of the pages wiil be able to be translated.\r\nto set a language you can call 'Dictionart.setLanguage([the language])'\r\nall pages can reference the text with 'Dictionery.[reference]\r\nthe references were devided to the main pages that is using them*/\r\nexport const Dictionary = new LocalizedStrings({\r\n  EN: {\r\n    //login page\r\n    enterMail: `Please enter email`,\r\n    enterPass: `Password`,\r\n    login: `Log in`, \r\n    signOut: `Sign out`,\r\n    inventory : \"show inventory\",\r\n\r\n    //containers\r\n    add_to_order :\"add to order\",\r\n    \r\n    \r\n    \r\n  },\r\n  HE: {\r\n    //login page\r\n    enterMail: `אנא הכניס דוא''ל`,\r\n    enterPass: `אנא הכנס סיסמא`,\r\n    login: `התחבר`,\r\n    signOut: `התנתק`,\r\n    inventory : \"הצגת מלאי\",\r\n\r\n\r\n    //containers\r\n    add_to_order :\"הוסף להזמנה\",\r\n    \r\n  }});\r\n\r\n  \r\n//language array\r\nexport const langs = [\"HE\", \"EN\"];\r\n\r\n//set language that is in the session Storage\r\nvar language = sessionStorage.getItem(\"current_language\");\r\nif (language === null) {\r\n  language = langs[0];\r\n}\r\nDictionary.setLanguage(language);\r\n\r\n//save new language in session storage and reload page\r\nfunction changeLanguage(lang) {\r\n  return function () {\r\n    sessionStorage.setItem(\"current_language\", lang);\r\n    window.location.reload();\r\n  }\r\n}\r\n//get the current page direction needed\r\nexport function getRTL(lang) {\r\n  let targetLang = lang ? lang : Dictionary.getLanguage();\r\n\r\n  switch (targetLang) {\r\n    case \"EN\":\r\n      return \"ltr\";\r\n    case \"HE\":\r\n    default:\r\n      return \"rtl\";\r\n  }\r\n\r\n\r\n}\r\n//sets a globe image with three language buttons \r\nexport const LangBtn = () => {\r\n  var currentLng = Dictionary.getLanguage();\r\n  var HEId = \"\",\r\n    ENId = \"\";\r\n\r\n  if (currentLng === \"EN\") ENId = \"chosen\";\r\n  else HEId = \"chosen\";\r\n\r\nvar lang_arr = {\"EN\":usaFlag,\"HE\":israelFlag} \r\n\r\n  return (\r\n    <div id=\"languages\">\r\n      <Dropdown >\r\n\r\n        <DropdownTrigger>\r\n          <div id=\"displayAndGlobe\">\r\n            <div>\r\n              <img src={lang_arr[Dictionary.getLanguage()]} id=\"globus\" alt=\"lang\" />\r\n            </div>\r\n          </div>\r\n        </DropdownTrigger>\r\n\r\n        <DropdownContent>\r\n\r\n          <ul id=\"langlist\">\r\n            <li>\r\n              <div className=\"flags\">\r\n              <img src={israelFlag} id={HEId} className=\"langButtons\" onClick={changeLanguage(\"HE\")}></img>\r\n              <div>עברית</div>\r\n              </div>\r\n            </li>\r\n            <li>\r\n            <div className=\"flags\">\r\n              <img src ={usaFlag} id={ENId} className=\"langButtons \" onClick={changeLanguage(\"EN\")} ></img>\r\n              <div>English</div>\r\n            </div>\r\n            </li>\r\n          </ul>\r\n        </DropdownContent>\r\n      </Dropdown>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\shlomo\\Desktop\\majordomo\\src\\config\\firebaseConfig.js",["41"],"import  firebase from 'firebase'\r\nimport 'firebase/auth';\r\n\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBZN7e1k3080ug33Mozfe6kowulXLH0ADw\",\r\n    authDomain: \"majordomo-me.firebaseapp.com\",\r\n    databaseURL: \"https://majordomo-me-default-rtdb.firebaseio.com\",\r\n    projectId: \"majordomo-me\",\r\n    storageBucket: \"majordomo-me.appspot.com\",\r\n    messagingSenderId: \"213314761996\",\r\n    appId: \"1:213314761996:web:e9c6d9737bf213952c0529\",\r\n    measurementId: \"G-1X8TL73123\"\r\n  };\r\n\r\n  firebase.initializeApp(firebaseConfig);\r\n  export const auth = firebase.auth();\r\n\r\nexport default{firebase};","C:\\Users\\shlomo\\Desktop\\majordomo\\src\\pages\\Main user page\\MainUserPage.js",["42","43","44","45","46"],"C:\\Users\\shlomo\\Desktop\\majordomo\\src\\components\\containers.jsx",["47","48","49","50","51","52","53"],"import React, { Component } from 'react';\r\nimport { Dictionary } from '../Dictionary';\r\nimport \"./containers.css\"\r\nimport inventory from '../images/icons/inventory.svg'\r\nimport home from '../images/icons/home.svg'\r\nimport cart from '../images/icons/cart.svg'\r\nimport profile from '../images/icons/profile.svg'\r\nimport warning from '../images/icons/warning.svg'\r\nimport circle_warning from '../images/icons/circle red warning.svg'\r\nimport cart_plus from '../images/icons/cart_plus.svg'\r\nimport logo from '../images/icons/Majordomo logo.svg'\r\n\r\nexport const BottomBar = (props) =>{\r\n\r\n    return(\r\n        <footer id = \"bottom-bar\">\r\n            <img className=\"bottom-bar-btn\" src={home} onClick={()=> alert(\"yess\")}></img>\r\n            <img className=\"bottom-bar-btn\" src={inventory}></img>\r\n            <img className=\"bottom-bar-btn\" src={cart}></img>\r\n            <img className=\"bottom-bar-btn\" src={profile}></img>\r\n        </footer>\r\n\r\n    )\r\n\r\n\r\n}\r\n\r\nexport class Container extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            all_weights: props.all_weights,\r\n            page:[]\r\n            \r\n        }\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n    componentWillMount() {\r\n        var all_weights = this.state.all_weights\r\n        if(all_weights){\r\n            var page = []\r\n            console.log(all_weights)\r\n            all_weights.forEach(weight => {\r\n                var row = []\r\n                weight.forEach(element => {\r\n                     row.push(<td>{element}</td>)\r\n                });\r\n                page.push(<tr>{row}</tr>)\r\n            });\r\n            this.setState({page:page})\r\n        }\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <table><tr><th>container id</th><th>time eddad</th><th>item id</th><th>client id</th></tr>\r\n            {this.state.page}\r\n            </table>\r\n        )\r\n    }\r\n}\r\n\r\nexport class Item_block extends Component {\r\n    /* creates a squere containing an item object\r\n    input props:weight = the weight of the item\r\n                date weighd:\r\n    */\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: props.name,\r\n            weight: props.weight,\r\n            unit: props.unit?props.unit:\"kg\",\r\n            weight_date: props.weight_date,\r\n            color: props.color,\r\n            symbol: props.symbol\r\n                 \r\n        }\r\n    }\r\n\r\n    // handleChange(e) {\r\n    //     this.setState({ [e.target.name]: e.target.value });\r\n    // }\r\n    // componentWillMount() {\r\n       \r\n    // }\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"item_container\">\r\n            <div className = \"item_squere\">\r\n                <div>\r\n                    {this.state.name}\r\n                </div>\r\n               <div >{this.state.weight} {this.state.unit}</div>\r\n               <div>{this.state.weight_date} </div>\r\n                </div>\r\n            <div className=\"add_to_order\">{Dictionary.add_to_order}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport class Notification extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            status:props.status,\r\n            number:props.number,\r\n            action:props.action\r\n                 \r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n            <div className = \"notification_container\">\r\n                <div className=\"center_items left_notification_area\">\r\n                <img id=\"left_img\" src ={this.state.action} className=\"notification_image\" alt=\"item action\"></img>\r\n                </div>\r\n\r\n                <div className = \"notification center_items\">\r\n                    {this.state.status}\r\n                </div>\r\n\r\n               <NotificationSymbol symbolNumber={this.state.number}/>                \r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nexport const NotificationSymbol= (props) =>{\r\n\r\n    var symbolArr = [warning,circle_warning,circle_warning],styleArr=[\"rgba(235, 104, 104, 0.32)\",\"rgba(241, 192, 51, 0.32)\",\"rgba(115, 213, 4, 0.32)\"]\r\n    var symbolNumber = props.symbolNumber, symbol = symbolArr[symbolNumber]\r\n    \r\n    var color = {\"background-color\": styleArr[symbolNumber]}\r\n    \r\n    return(\r\n        <div className={ \"notification_symbol center_items\"} style={color}>\r\n                <img  src ={symbol} className=\"notification_image right_img\"></img>\r\n        </div>\r\n    )\r\n\r\n\r\n    \r\n\r\n}",{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":9,"column":10,"nodeType":"60","messageId":"61","endLine":9,"endColumn":18},{"ruleId":"58","severity":1,"message":"62","line":47,"column":17,"nodeType":"60","messageId":"61","endLine":47,"endColumn":26},{"ruleId":"58","severity":1,"message":"63","line":48,"column":17,"nodeType":"60","messageId":"61","endLine":48,"endColumn":29},{"ruleId":"64","severity":1,"message":"65","line":65,"column":25,"nodeType":"66","endLine":65,"endColumn":72},{"ruleId":"67","severity":1,"message":"68","line":66,"column":29,"nodeType":"66","endLine":66,"endColumn":96},{"ruleId":"69","severity":1,"message":"70","line":75,"column":33,"nodeType":"66","endLine":75,"endColumn":36},{"ruleId":"58","severity":1,"message":"71","line":5,"column":8,"nodeType":"60","messageId":"61","endLine":5,"endColumn":13},{"ruleId":"64","severity":1,"message":"65","line":103,"column":15,"nodeType":"66","endLine":103,"endColumn":102},{"ruleId":"64","severity":1,"message":"65","line":109,"column":15,"nodeType":"66","endLine":109,"endColumn":102},{"ruleId":"72","severity":1,"message":"73","line":19,"column":1,"nodeType":"74","endLine":19,"endColumn":26},{"ruleId":"58","severity":1,"message":"75","line":5,"column":13,"nodeType":"60","messageId":"61","endLine":5,"endColumn":17},{"ruleId":"58","severity":1,"message":"76","line":6,"column":20,"nodeType":"60","messageId":"61","endLine":6,"endColumn":29},{"ruleId":"58","severity":1,"message":"77","line":28,"column":9,"nodeType":"60","messageId":"61","endLine":28,"endColumn":12},{"ruleId":"78","severity":1,"message":"79","line":31,"column":22,"nodeType":"66","endLine":31,"endColumn":102},{"ruleId":"78","severity":1,"message":"80","line":88,"column":17,"nodeType":"66","endLine":88,"endColumn":27},{"ruleId":"58","severity":1,"message":"81","line":10,"column":8,"nodeType":"60","messageId":"61","endLine":10,"endColumn":17},{"ruleId":"58","severity":1,"message":"82","line":11,"column":8,"nodeType":"60","messageId":"61","endLine":11,"endColumn":12},{"ruleId":"64","severity":1,"message":"65","line":17,"column":13,"nodeType":"66","endLine":17,"endColumn":85},{"ruleId":"64","severity":1,"message":"65","line":18,"column":13,"nodeType":"66","endLine":18,"endColumn":61},{"ruleId":"64","severity":1,"message":"65","line":19,"column":13,"nodeType":"66","endLine":19,"endColumn":56},{"ruleId":"64","severity":1,"message":"65","line":20,"column":13,"nodeType":"66","endLine":20,"endColumn":59},{"ruleId":"64","severity":1,"message":"65","line":149,"column":17,"nodeType":"66","endLine":149,"endColumn":78},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"no-unused-vars","'validate' is defined but never used.","Identifier","unusedVar","'errorCode' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/no-redundant-roles","The element form has an implicit role of form. Defining this explicitly is redundant and should be avoided.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'globe' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'data' is defined but never used.","'Container' is defined but never used.","'max' is assigned a value but never used.","react/jsx-pascal-case","Imported JSX component Item_block must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Nav_bar must be in PascalCase or SCREAMING_SNAKE_CASE","'cart_plus' is defined but never used.","'logo' is defined but never used.","no-global-assign","no-unsafe-negation"]