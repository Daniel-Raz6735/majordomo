[{"C:\\Users\\shlomo\\Desktop\\majordomo\\src\\index.js":"1","C:\\Users\\shlomo\\Desktop\\majordomo\\src\\pages\\login page\\LoginPage.js":"2","C:\\Users\\shlomo\\Desktop\\majordomo\\src\\Dictionary.js":"3","C:\\Users\\shlomo\\Desktop\\majordomo\\src\\config\\firebaseConfig.js":"4","C:\\Users\\shlomo\\Desktop\\majordomo\\src\\pages\\Main user page\\MainUserPage.js":"5","C:\\Users\\shlomo\\Desktop\\majordomo\\src\\components\\containers.jsx":"6","C:\\Users\\shlomo\\Desktop\\majordomo\\src\\components\\notifications.jsx":"7","C:\\Users\\shlomo\\Desktop\\majordomo\\src\\components\\bars.jsx":"8"},{"size":276,"mtime":1610930196686,"results":"9","hashOfConfig":"10"},{"size":6164,"mtime":1610628469884,"results":"11","hashOfConfig":"10"},{"size":3536,"mtime":1610930386041,"results":"12","hashOfConfig":"10"},{"size":661,"mtime":1610459349628,"results":"13","hashOfConfig":"10"},{"size":2629,"mtime":1610958248438,"results":"14","hashOfConfig":"10"},{"size":2153,"mtime":1610930342605,"results":"15","hashOfConfig":"10"},{"size":5038,"mtime":1610934303101,"results":"16","hashOfConfig":"10"},{"size":1520,"mtime":1610964735074,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"17ximuj",{"filePath":"21","messages":"22","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\shlomo\\Desktop\\majordomo\\src\\index.js",[],["40","41"],"C:\\Users\\shlomo\\Desktop\\majordomo\\src\\pages\\login page\\LoginPage.js",["42","43","44","45","46","47"],"import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport './LoginPage.css';\r\nimport $ from 'jquery';\r\nimport { auth } from '../../config/firebaseConfig';\r\nimport MainUserPage from '../Main user page/MainUserPage'\r\nimport {Dictionary, LangBtn} from '../../Dictionary'\r\nimport { validate } from 'jquery-validation';\r\n// require('jquery-validation');\r\n\r\n\r\n\r\nclass LoginPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.login = this.login.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.state = {\r\n            email: {},\r\n            password: {},\r\n        }\r\n    }\r\n\r\n    login(e) {\r\n        e.preventDefault();\r\n        $(\"#login_form\").validate({\r\n            // Specify validation rules\r\n            rules: {\r\n                email: {\r\n                    required: true,\r\n                    minlength: 1,\r\n                    email: true,\r\n                },\r\n                password: {\r\n                    required: true,\r\n                    minlength: 1,\r\n                },\r\n            },\r\n            messages: {}\r\n        });\r\n\r\n        if (!$(\"#login_form\").valid()) return;\r\n        auth.signInWithEmailAndPassword(this.state.email, this.state.password).then(() => {\r\n            window.location.reload();\r\n        }).catch(function (error) {\r\n            var errorCode = error.code;\r\n            var errorMessage = error.message;\r\n            // alert(errorCode + \" : \" + errorMessage);\r\n            $(\"#password\").val(\"\");\r\n        });\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"LPcover\" className=\"cover\">\r\n                <LangBtn/>\r\n                <div id=\"loginWrapper\" className=\"wrapper\">\r\n                    <div className=\"loginContainer\">\r\n                        <div id=\"buttonWrapper123\">\r\n                        <img src ='../images/icons/Majordomo logo.svg'></img>\r\n                            <form dir=\"RTL\" id=\"login_form\" name=\"login_form_name\" role=\"form\">\r\n                                < input type=\"email\"\r\n                                    id=\"email\"\r\n                                    name=\"email\"\r\n                                    placeholder={Dictionary.enterMail}\r\n                                    autoComplete='off'\r\n                                    defaultValue=\"\" required\r\n                                    onChange={this.handleChange}>\r\n                                </input>\r\n                                <a>‚Äè </a>\r\n                                < input type=\"password\"\r\n                                    id=\"password\"\r\n                                    name=\"password\"\r\n                                    placeholder={Dictionary.enterPass}\r\n                                    autoComplete='off'\r\n                                    defaultValue=\"\" required\r\n                                    onChange={this.handleChange}\r\n                                >\r\n                                </input>\r\n                                <button id=\"loginbtn\"\r\n                                    type=\"submit\"\r\n                                    text={Dictionary.login}\r\n                                    className=\"btn btn-success\"\r\n                                    onClick={this.login} >\r\n                                    {Dictionary.login}\r\n                                </button>\r\n                            </form>\r\n                        </div>\r\n                      \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default LoginPage;\r\n\r\n\r\n\r\nexport class LoginComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: false,\r\n            page: [],\r\n            permission: false,\r\n        }\r\n\r\n    }\r\n\r\n    // authListener() {\r\n    //     auth.onAuthStateChanged((user) => {\r\n    //         if (user) this.setState({ user });\r\n    //         else this.setState({ user: false });\r\n    //         console.log(user)\r\n    //     })\r\n    // }\r\n\r\n    // signOutFun() {\r\n    //     auth.signOut();\r\n    // }\r\n    timeRefresh() {\r\n        //reset page to main page if page is inactive for a half an hour\r\n        var time = new Date().getTime();\r\n        $(document.body).bind(\"mousemove keypress touchmove \", function () {\r\n            time = new Date().getTime();\r\n        });\r\n\r\n        setInterval(function () {\r\n            if ((new Date().getTime() - time >= 180000)) {\r\n                window.location.href = \"/\";\r\n            }\r\n        }, 1000);\r\n    }\r\n\r\n    componentDidMount() {\r\n        auth.onAuthStateChanged(user => {\r\n            console.log(user)\r\n            if (user){\r\n                this.renderAdminDiv(user)\r\n            }\r\n            else\r\n            this.setState({page:<LoginPage/>})\r\n        })\r\n\r\n    }\r\n\r\n    renderAdminDiv(user) {\r\n        \r\n       \r\n        ReactDOM.render(\r\n            <Router>\r\n                {/* <Route exact path=\"/\" component={() => <AdminPage Admin={this.state.permission} />} />\r\n                <Route path=\"/WomanPage/:id\" component={props => <WomanPage {...props} Admin={this.state.permission} />} />\r\n                <Route path=\"/Category\" component={() => <Category Admin={this.state.permission} />} /> */}\r\n                <Route exect path=\"/\" component={() => <MainUserPage Admin={this.state.permission} />}/>\r\n            </Router>, document.getElementById('root')\r\n        );\r\n    }\r\n\r\n    renderVisitorDiv(user) {\r\n        this.timeRefresh();\r\n        ReactDOM.render(\r\n            <Router>\r\n                <Route exact path=\"/\" component={MainUserPage} />\r\n                {/* <Route path=\"/WomanPage/:id\" component={props => <WomanPage {...props} />} />\r\n                <Route path=\"/Category\" component={Category} /> */}\r\n            </Router>, document.getElementById('root')\r\n        );\r\n    }\r\n\r\n    render() {\r\n\r\n        return <div id=\"renderDiv\"> {this.state.page}</div>\r\n\r\n    }\r\n}\r\n","C:\\Users\\shlomo\\Desktop\\majordomo\\src\\Dictionary.js",["48","49","50","51"],"import React from 'react';\r\nimport LocalizedStrings from 'react-localization';\r\nimport Dropdown, { DropdownContent, DropdownTrigger } from 'react-simple-dropdown';\r\nimport './Dictionary.css';\r\nimport globe from './images/globe.png';\r\nimport israelFlag from './images/icons/israel.svg';\r\nimport usaFlag from './images/icons/USA.svg';\r\nimport {base_url} from './index'\r\n\r\n\r\n/* LocalizedStrings is holding our Dictionary so that all of the pages wiil be able to be translated.\r\nto set a language you can call 'Dictionart.setLanguage([the language])'\r\nall pages can reference the text with 'Dictionery.[reference]\r\nthe references were devided to the main pages that is using them*/\r\nexport const Dictionary = new LocalizedStrings({\r\n  EN: {\r\n    //login page\r\n    enterMail: `Please enter email`,\r\n    enterPass: `Password`,\r\n    login: `Log in`, \r\n    signOut: `Sign out`,\r\n    inventory : \"show inventory\",\r\n\r\n    \r\n    \r\n    //containers\r\n    \r\n    //notifications\r\n    just_few:\"Just a few left\",\r\n    running_low:\"Running low\",\r\n    must_use:\"Must use ASAP\",\r\n    add_to_order :\"Add to order\",\r\n    suggest_dish :\"Suggest Dish\",\r\n\r\n\r\n    \r\n    \r\n  },\r\n  HE: {\r\n    //login page\r\n    enterMail: `◊ê◊†◊ê ◊î◊õ◊†◊ô◊° ◊ì◊ï◊ê''◊ú`,\r\n    enterPass: `◊ê◊†◊ê ◊î◊õ◊†◊° ◊°◊ô◊°◊û◊ê`,\r\n    login: `◊î◊™◊ó◊ë◊®`,\r\n    signOut: `◊î◊™◊†◊™◊ß`,\r\n    inventory : \"◊î◊¶◊í◊™ ◊û◊ú◊ê◊ô\",\r\n\r\n\r\n    //containers\r\n    add_to_order :\"◊î◊ï◊°◊£ ◊ú◊î◊ñ◊û◊†◊î\",\r\n    \r\n     //notifications\r\n     just_few:\"◊†◊ï◊™◊®◊ï ◊®◊ß ◊õ◊û◊î\",\r\n     running_low:\"◊ê◊ï◊ñ◊ú\",\r\n     must_use:\"◊¶◊®◊ô◊ö ◊ú◊î◊©◊™◊û◊© ◊ë◊ì◊ó◊ô◊§◊ï◊™\",\r\n    \r\n  }});\r\n\r\n  \r\n//language array\r\nexport const langs = [\"HE\", \"EN\"];\r\n\r\n//set language that is in the session Storage\r\nvar language = sessionStorage.getItem(\"current_language\");\r\nif (language === null) {\r\n  language = langs[0];\r\n}\r\nDictionary.setLanguage(language);\r\n\r\n//save new language in session storage and reload page\r\nfunction changeLanguage(lang) {\r\n  return function () {\r\n    sessionStorage.setItem(\"current_language\", lang);\r\n    window.location.reload();\r\n  }\r\n}\r\n//get the current page direction needed\r\nexport function getRTL(lang) {\r\n  let targetLang = lang ? lang : Dictionary.getLanguage();\r\n\r\n  switch (targetLang) {\r\n    case \"EN\":\r\n      return \"ltr\";\r\n    case \"HE\":\r\n    default:\r\n      return \"rtl\";\r\n  }\r\n\r\n\r\n}\r\n//sets a globe image with three language buttons \r\nexport const LangBtn = () => {\r\n  var currentLng = Dictionary.getLanguage();\r\n  var HEId = \"\",\r\n    ENId = \"\";\r\n\r\n  if (currentLng === \"EN\") ENId = \"chosen\";\r\n  else HEId = \"chosen\";\r\n\r\nvar lang_arr = {\"EN\":usaFlag,\"HE\":israelFlag} \r\n\r\n  return (\r\n    <div id=\"languages\">\r\n      <Dropdown >\r\n\r\n        <DropdownTrigger>\r\n          <div id=\"displayAndGlobe\">\r\n            <div>\r\n              <img src={lang_arr[Dictionary.getLanguage()]} id=\"globus\" alt=\"lang\" />\r\n            </div>\r\n          </div>\r\n        </DropdownTrigger>\r\n\r\n        <DropdownContent>\r\n\r\n          <ul id=\"langlist\">\r\n            <li>\r\n              <div className=\"flags\">\r\n              <img src={israelFlag} id={HEId} className=\"langButtons\" onClick={changeLanguage(\"HE\")}></img>\r\n              <div>◊¢◊ë◊®◊ô◊™</div>\r\n              </div>\r\n            </li>\r\n            <li>\r\n            <div className=\"flags\">\r\n              <img src ={usaFlag} id={ENId} className=\"langButtons \" onClick={changeLanguage(\"EN\")} ></img>\r\n              <div>English</div>\r\n            </div>\r\n            </li>\r\n          </ul>\r\n        </DropdownContent>\r\n      </Dropdown>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\shlomo\\Desktop\\majordomo\\src\\config\\firebaseConfig.js",["52"],"import  firebase from 'firebase'\r\nimport 'firebase/auth';\r\n\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBZN7e1k3080ug33Mozfe6kowulXLH0ADw\",\r\n    authDomain: \"majordomo-me.firebaseapp.com\",\r\n    databaseURL: \"https://majordomo-me-default-rtdb.firebaseio.com\",\r\n    projectId: \"majordomo-me\",\r\n    storageBucket: \"majordomo-me.appspot.com\",\r\n    messagingSenderId: \"213314761996\",\r\n    appId: \"1:213314761996:web:e9c6d9737bf213952c0529\",\r\n    measurementId: \"G-1X8TL73123\"\r\n  };\r\n\r\n  firebase.initializeApp(firebaseConfig);\r\n  export const auth = firebase.auth();\r\n\r\nexport default{firebase};","C:\\Users\\shlomo\\Desktop\\majordomo\\src\\pages\\Main user page\\MainUserPage.js",["53","54","55","56","57","58","59","60","61","62","63"],"C:\\Users\\shlomo\\Desktop\\majordomo\\src\\components\\containers.jsx",["64"],"import React, { Component } from 'react';\r\nimport { Dictionary } from '../Dictionary';\r\nimport \"./containers.css\"\r\nimport {base_url} from '../index'\r\n\r\n\r\n\r\nexport class Container extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            all_weights: props.all_weights,\r\n            page:[]\r\n            \r\n        }\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n    componentWillMount() {\r\n        var all_weights = this.state.all_weights\r\n        if(all_weights){\r\n            var page = []\r\n            console.log(all_weights)\r\n            all_weights.forEach(weight => {\r\n                var row = []\r\n                weight.forEach(element => {\r\n                     row.push(<td>{element}</td>)\r\n                });\r\n                page.push(<tr>{row}</tr>)\r\n            });\r\n            this.setState({page:page})\r\n        }\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <table><tr><th>container id</th><th>time eddad</th><th>item id</th><th>client id</th></tr>\r\n            {this.state.page}\r\n            </table>\r\n        )\r\n    }\r\n}\r\n\r\nexport class Item_block extends Component {\r\n    /* creates a squere containing an item object\r\n    input props:weight = the weight of the item\r\n                date weighd:\r\n    */\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: props.name,\r\n            weight: props.weight,\r\n            unit: props.unit?props.unit:\"kg\",\r\n            weight_date: props.weight_date,\r\n            color: props.color,\r\n            symbol: props.symbol\r\n                 \r\n        }\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"item_container\">\r\n            <div className = \"item_squere\">\r\n                <div>\r\n                    {this.state.name}\r\n                </div>\r\n               <div >{this.state.weight} {this.state.unit}</div>\r\n               <div>{this.state.weight_date} </div>\r\n                </div>\r\n            <div className=\"add_to_order\">{Dictionary.add_to_order}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n","C:\\Users\\shlomo\\Desktop\\majordomo\\src\\components\\notifications.jsx",["65"],"import React, { Component } from 'react';\r\nimport \"./notifications.css\"\r\nimport yellow_warning from '../images/icons/triangle_warning.svg'\r\nimport circle_warning from '../images/icons/circle red warning.svg'\r\nimport cart_plus from '../images/icons/cart_plus.svg'\r\nimport suggest_dish from '../images/icons/suggest_dish.svg'\r\nimport overflow_sign from '../images/icons/overflow sign.svg'\r\nimport { Dictionary } from '../Dictionary';\r\nimport {base_url} from '../index'\r\nimport $ from 'jquery'\r\nimport ReactDOM from 'react-dom'\r\n\r\n\r\n\r\n\r\n\r\nfunction get_notifications(callback, client_id){\r\n    //request all notifications for a business\r\n    var request = base_url+'/get/notifications';\r\n\r\n    if (client_id){\r\n        request += \"?client_id=\"+client_id + \"&active=true\"\r\n    console.log(request)\r\n    $.ajax({\r\n        url: request, \r\n        success: function (res) {\r\n            callback(res);\r\n        },\r\n        error: function (err) {\r\n            console.log(err)\r\n        }\r\n    });\r\n    }\r\n    else{\r\n        console.log(\"no user id enterd. nothing happend\")\r\n    }\r\n    \r\n}\r\n\r\nfunction process_notifications(data){\r\n    var page = []\r\n    var items = [\"abc\",\"cucumber\",\"tomato\"]\r\n    if(typeof(data)==\"object\")\r\n\r\n        data.forEach(element => {\r\n            page.push(<Notification number={element[\"code\"]%2} item_name={items[element[\"food_item_id\"]]}  />)\r\n        });\r\n    ReactDOM.render( <div id =\"first_notification\" className=\"notification_block\">{page}</div>,document.getElementById('first_notification'))\r\n}\r\n\r\n\r\n\r\n\r\nexport class Notification_block extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            status:props.status,\r\n            number:props.number,\r\n            action:props.action\r\n                 \r\n        }\r\n    }\r\n\r\n\r\n\r\n    componentWillMount(){\r\n        get_notifications(process_notifications,1)\r\n    }\r\n    render(){\r\n\r\n\r\n        return(\r\n            <div id =\"first_notification\" className=\"notification_block\">\r\n                <Notification number={0} item_name=\"red\" total_weight={26} />\r\n                <Notification  number={1} item_name=\"yellow\" total_weight={26}/>\r\n                <Notification number={2} item_name=\"orange\" total_weight={26}/>\r\n                </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport class Notification extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        var arr = [cart_plus,suggest_dish] \r\n        var text_descp = [Dictionary[\"add_to_order\"],Dictionary[\"suggest_dish\"]] \r\n        var action_by_number = {\r\n                                0:{\"action\":arr[0],\"action_desc\":text_descp[0],\"message\":Dictionary[\"just_few\"]},\r\n                                1:{\"action\":arr[0],\"action_desc\":text_descp[0],\"message\":Dictionary[\"running_low\"]},\r\n                                2:{\"action\":arr[1],\"action_desc\":text_descp[1],\"message\":Dictionary[\"must_use\"]}\r\n        };\r\n        var mess = action_by_number[props.number].message,\r\n        image = action_by_number[props.number].action,\r\n        desc = action_by_number[props.number].action_desc\r\n \r\n        this.state = {\r\n            number:props.number,            \r\n            item_name:props.item_name,\r\n            total_weight: props.total_weight, \r\n            message:props.message?this.state.message:mess,\r\n            action_image: image ,\r\n            action_desc:desc,\r\n        }\r\n    }\r\n    componentWillMount(){\r\n\r\n        \r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n            <div className = \"notification_container\">\r\n                <div className=\"center_items left_notification_area\">\r\n                <img src ={this.state.action_image} className=\"notification_image left_img\" alt={this.state.action_desc}/>\r\n                {this.state.action_desc}\r\n                </div>\r\n                <div className=\"center_items notification_item_name\">\r\n                {this.state.item_name}\r\n                </div>\r\n                <div className=\"center_items notification_weight\">\r\n                <div>{this.state.total_weight}</div>\r\n                </div>\r\n\r\n                <div className = \"notification center_items\">\r\n                    {this.state.message}\r\n                </div>\r\n               <NotificationSymbol symbolNumber={this.state.number}/>                \r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const NotificationSymbol= (props) =>{\r\n    // notification symbol by code \r\n    // 0 is a red circle, 1 is yellow tringle, 2, is green overflow dish    \r\n    var symbolArr = [circle_warning, yellow_warning, overflow_sign],\r\n        styleArr=[\"rgba(235, 104, 104, 0.32)\",\"rgba(247, 231, 185, 0.85)\",\"rgba(255, 103, 14, 0.2)\"]\r\n    var symbolNumber = props.symbolNumber, symbol = symbolArr[symbolNumber],\r\n        color = {\"background-color\": styleArr[symbolNumber]}\r\n    \r\n    return(\r\n        <div className=\"notification_symbol_area center_items\" style={color}>\r\n                <img src ={symbol} className=\"notification_symbol\"></img>\r\n        </div>\r\n    )\r\n\r\n\r\n    \r\n\r\n}","C:\\Users\\shlomo\\Desktop\\majordomo\\src\\components\\bars.jsx",["66","67","68","69","70"],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":9,"column":10,"nodeType":"77","messageId":"78","endLine":9,"endColumn":18},{"ruleId":"75","severity":1,"message":"79","line":47,"column":17,"nodeType":"77","messageId":"78","endLine":47,"endColumn":26},{"ruleId":"75","severity":1,"message":"80","line":48,"column":17,"nodeType":"77","messageId":"78","endLine":48,"endColumn":29},{"ruleId":"81","severity":1,"message":"82","line":65,"column":25,"nodeType":"83","endLine":65,"endColumn":72},{"ruleId":"84","severity":1,"message":"85","line":66,"column":29,"nodeType":"83","endLine":66,"endColumn":96},{"ruleId":"86","severity":1,"message":"87","line":75,"column":33,"nodeType":"83","endLine":75,"endColumn":36},{"ruleId":"75","severity":1,"message":"88","line":5,"column":8,"nodeType":"77","messageId":"78","endLine":5,"endColumn":13},{"ruleId":"75","severity":1,"message":"89","line":8,"column":9,"nodeType":"77","messageId":"78","endLine":8,"endColumn":17},{"ruleId":"81","severity":1,"message":"82","line":118,"column":15,"nodeType":"83","endLine":118,"endColumn":102},{"ruleId":"81","severity":1,"message":"82","line":124,"column":15,"nodeType":"83","endLine":124,"endColumn":102},{"ruleId":"90","severity":1,"message":"91","line":19,"column":1,"nodeType":"92","endLine":19,"endColumn":26},{"ruleId":"75","severity":1,"message":"93","line":2,"column":10,"nodeType":"77","messageId":"78","endLine":2,"endColumn":20},{"ruleId":"75","severity":1,"message":"94","line":2,"column":22,"nodeType":"77","messageId":"78","endLine":2,"endColumn":29},{"ruleId":"75","severity":1,"message":"95","line":3,"column":10,"nodeType":"77","messageId":"78","endLine":3,"endColumn":14},{"ruleId":"75","severity":1,"message":"96","line":5,"column":13,"nodeType":"77","messageId":"78","endLine":5,"endColumn":17},{"ruleId":"75","severity":1,"message":"97","line":7,"column":21,"nodeType":"77","messageId":"78","endLine":7,"endColumn":30},{"ruleId":"75","severity":1,"message":"98","line":11,"column":8,"nodeType":"77","messageId":"78","endLine":11,"endColumn":17},{"ruleId":"75","severity":1,"message":"99","line":12,"column":8,"nodeType":"77","messageId":"78","endLine":12,"endColumn":12},{"ruleId":"75","severity":1,"message":"100","line":27,"column":9,"nodeType":"77","messageId":"78","endLine":27,"endColumn":12},{"ruleId":"101","severity":1,"message":"102","line":30,"column":22,"nodeType":"83","endLine":30,"endColumn":102},{"ruleId":"101","severity":1,"message":"103","line":87,"column":17,"nodeType":"83","endLine":87,"endColumn":27},{"ruleId":"101","severity":1,"message":"104","line":89,"column":17,"nodeType":"83","endLine":89,"endColumn":38},{"ruleId":"75","severity":1,"message":"89","line":4,"column":9,"nodeType":"77","messageId":"78","endLine":4,"endColumn":17},{"ruleId":"81","severity":1,"message":"82","line":159,"column":17,"nodeType":"83","endLine":159,"endColumn":68},{"ruleId":"75","severity":1,"message":"89","line":6,"column":9,"nodeType":"77","messageId":"78","endLine":6,"endColumn":17},{"ruleId":"81","severity":1,"message":"82","line":18,"column":13,"nodeType":"83","endLine":18,"endColumn":85},{"ruleId":"81","severity":1,"message":"82","line":19,"column":13,"nodeType":"83","endLine":19,"endColumn":61},{"ruleId":"81","severity":1,"message":"82","line":20,"column":13,"nodeType":"83","endLine":20,"endColumn":56},{"ruleId":"81","severity":1,"message":"82","line":21,"column":13,"nodeType":"83","endLine":21,"endColumn":59},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],"no-unused-vars","'validate' is defined but never used.","Identifier","unusedVar","'errorCode' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/no-redundant-roles","The element form has an implicit role of form. Defining this explicitly is redundant and should be avoided.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'globe' is defined but never used.","'base_url' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'Dictionary' is defined but never used.","'LangBtn' is defined but never used.","'auth' is defined but never used.","'data' is defined but never used.","'Container' is defined but never used.","'cart_plus' is defined but never used.","'logo' is defined but never used.","'max' is assigned a value but never used.","react/jsx-pascal-case","Imported JSX component Item_block must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Nav_bar must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Notification_block must be in PascalCase or SCREAMING_SNAKE_CASE","no-global-assign","no-unsafe-negation"]