[{"C:\\Users\\Daniel Raz\\Desktop\\majordomo\\src\\index.js":"1","C:\\Users\\Daniel Raz\\Desktop\\majordomo\\src\\pages\\login page\\LoginPage.js":"2","C:\\Users\\Daniel Raz\\Desktop\\majordomo\\src\\config\\firebaseConfig.js":"3","C:\\Users\\Daniel Raz\\Desktop\\majordomo\\src\\Dictionary.js":"4","C:\\Users\\Daniel Raz\\Desktop\\majordomo\\src\\pages\\Main user page\\MainUserPage.js":"5","C:\\Users\\Daniel Raz\\Desktop\\majordomo\\src\\components\\containers.jsx":"6"},{"size":218,"mtime":1608117662368,"results":"7","hashOfConfig":"8"},{"size":6175,"mtime":1610394939527,"results":"9","hashOfConfig":"8"},{"size":661,"mtime":1608115850012,"results":"10","hashOfConfig":"8"},{"size":2923,"mtime":1610394153142,"results":"11","hashOfConfig":"8"},{"size":3104,"mtime":1610398964740,"results":"12","hashOfConfig":"8"},{"size":2869,"mtime":1610399146390,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"hupcg5",{"filePath":"17","messages":"18","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Daniel Raz\\Desktop\\majordomo\\src\\index.js",[],["29","30"],"C:\\Users\\Daniel Raz\\Desktop\\majordomo\\src\\pages\\login page\\LoginPage.js",["31","32","33","34","35","36"],"C:\\Users\\Daniel Raz\\Desktop\\majordomo\\src\\config\\firebaseConfig.js",["37"],"import  firebase from 'firebase'\r\nimport 'firebase/auth';\r\n\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBZN7e1k3080ug33Mozfe6kowulXLH0ADw\",\r\n    authDomain: \"majordomo-me.firebaseapp.com\",\r\n    databaseURL: \"https://majordomo-me-default-rtdb.firebaseio.com\",\r\n    projectId: \"majordomo-me\",\r\n    storageBucket: \"majordomo-me.appspot.com\",\r\n    messagingSenderId: \"213314761996\",\r\n    appId: \"1:213314761996:web:e9c6d9737bf213952c0529\",\r\n    measurementId: \"G-1X8TL73123\"\r\n  };\r\n\r\n  firebase.initializeApp(firebaseConfig);\r\n  export const auth = firebase.auth();\r\n\r\nexport default{firebase};","C:\\Users\\Daniel Raz\\Desktop\\majordomo\\src\\Dictionary.js",["38"],"import React from 'react';\r\nimport LocalizedStrings from 'react-localization';\r\nimport Dropdown, { DropdownContent, DropdownTrigger } from 'react-simple-dropdown';\r\nimport './Dictionary.css';\r\nimport globe from './images/globe.png';\r\n\r\n\r\n/* LocalizedStrings is holding our Dictionary so that all of the pages wiil be able to be translated.\r\nto set a language you can call 'Dictionart.setLanguage([the language])'\r\nall pages can reference the text with 'Dictionery.[reference]\r\nthe references were devided to the main pages that is using them*/\r\nexport const Dictionary = new LocalizedStrings({\r\n  EN: {\r\n    //login page\r\n    enterMail: `Please enter email`,\r\n    enterPass: `Password`,\r\n    login: `Log in`, \r\n    signOut: `Sign out`,\r\n    inventory : \"show inventory\",\r\n\r\n    //containers\r\n    add_to_order :\"add to order\",\r\n    \r\n    \r\n    \r\n  },\r\n  HE: {\r\n    //login page\r\n    enterMail: `אנא הכניס דוא''ל`,\r\n    enterPass: `אנא הכנס סיסמא`,\r\n    login: `התחבר`,\r\n    signOut: `התנתק`,\r\n    inventory : \"הצגת מלאי\",\r\n\r\n\r\n    //containers\r\n    add_to_order :\"הוסף להזמנה\",\r\n    \r\n  }});\r\n\r\n  \r\n//language array\r\nexport const langs = [\"HE\", \"EN\"];\r\n\r\n//set language that is in the session Storage\r\nvar language = sessionStorage.getItem(\"current_language\");\r\nif (language === null) {\r\n  language = langs[0];\r\n}\r\nDictionary.setLanguage(language);\r\n\r\n//save new language in session storage and reload page\r\nfunction changeLanguage(lang) {\r\n  return function () {\r\n    sessionStorage.setItem(\"current_language\", lang);\r\n    window.location.reload();\r\n  }\r\n}\r\n//get the current page direction needed\r\nexport function getRTL(lang) {\r\n  let targetLang = lang ? lang : Dictionary.getLanguage();\r\n\r\n  switch (targetLang) {\r\n    case \"EN\":\r\n      return \"ltr\";\r\n    case \"HE\":\r\n    default:\r\n      return \"rtl\";\r\n  }\r\n\r\n\r\n}\r\n//sets a globe image with three language buttons \r\nexport const LangBtn = () => {\r\n  var currentLng = Dictionary.getLanguage();\r\n  var HEId = \"\",\r\n    ENId = \"\";\r\n\r\n  if (currentLng === \"EN\") ENId = \"chosen\";\r\n  else HEId = \"chosen\";\r\n\r\n\r\n  return (\r\n    <div id=\"languages\">\r\n      <Dropdown >\r\n\r\n        <DropdownTrigger>\r\n          <div id=\"displayAndGlobe\">\r\n            <div>\r\n              <img src={globe} id=\"globus\" alt=\"lang\" />\r\n            </div>\r\n            <div>\r\n              <a id=\"currentLangDisplay\">{Dictionary.getLanguage()}</a>\r\n            </div>\r\n          </div>\r\n        </DropdownTrigger>\r\n\r\n        <DropdownContent>\r\n\r\n          <ul id=\"langlist\">\r\n            <li>\r\n              <button id={HEId} className=\"langButtons\" onClick={changeLanguage(\"HE\")}>עברית</button>\r\n            </li>\r\n            <li>\r\n              <button id={ENId} className=\"langButtons \" onClick={changeLanguage(\"EN\")} >English</button>\r\n            </li>\r\n          </ul>\r\n        </DropdownContent>\r\n      </Dropdown>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Daniel Raz\\Desktop\\majordomo\\src\\pages\\Main user page\\MainUserPage.js",["39","40","41","42","43","44","45","46"],"C:\\Users\\Daniel Raz\\Desktop\\majordomo\\src\\components\\containers.jsx",["47","48","49","50"],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":9,"column":10,"nodeType":"57","messageId":"58","endLine":9,"endColumn":18},{"ruleId":"55","severity":1,"message":"59","line":47,"column":17,"nodeType":"57","messageId":"58","endLine":47,"endColumn":26},{"ruleId":"55","severity":1,"message":"60","line":48,"column":17,"nodeType":"57","messageId":"58","endLine":48,"endColumn":29},{"ruleId":"61","severity":1,"message":"62","line":66,"column":29,"nodeType":"63","endLine":66,"endColumn":96},{"ruleId":"64","severity":1,"message":"65","line":75,"column":33,"nodeType":"63","endLine":75,"endColumn":36},{"ruleId":"66","severity":1,"message":"67","line":94,"column":25,"nodeType":"63","endLine":94,"endColumn":81},{"ruleId":"68","severity":1,"message":"69","line":19,"column":1,"nodeType":"70","endLine":19,"endColumn":26},{"ruleId":"64","severity":1,"message":"65","line":93,"column":15,"nodeType":"63","endLine":93,"endColumn":42},{"ruleId":"55","severity":1,"message":"71","line":5,"column":8,"nodeType":"57","messageId":"58","endLine":5,"endColumn":13},{"ruleId":"55","severity":1,"message":"72","line":6,"column":13,"nodeType":"57","messageId":"58","endLine":6,"endColumn":17},{"ruleId":"55","severity":1,"message":"73","line":7,"column":20,"nodeType":"57","messageId":"58","endLine":7,"endColumn":29},{"ruleId":"74","severity":1,"message":"75","line":27,"column":30,"nodeType":"76","messageId":"77","endLine":27,"endColumn":32},{"ruleId":"78","severity":1,"message":"79","line":32,"column":11,"nodeType":"63","endLine":32,"endColumn":78},{"ruleId":"80","severity":1,"message":"81","line":65,"column":5,"nodeType":"82","messageId":"83","endLine":68,"endColumn":6},{"ruleId":"55","severity":1,"message":"84","line":71,"column":15,"nodeType":"57","messageId":"58","endLine":71,"endColumn":19},{"ruleId":"78","severity":1,"message":"79","line":91,"column":17,"nodeType":"63","endLine":91,"endColumn":94},{"ruleId":"66","severity":1,"message":"67","line":15,"column":13,"nodeType":"63","endLine":15,"endColumn":85},{"ruleId":"66","severity":1,"message":"67","line":16,"column":13,"nodeType":"63","endLine":16,"endColumn":61},{"ruleId":"66","severity":1,"message":"67","line":17,"column":13,"nodeType":"63","endLine":17,"endColumn":56},{"ruleId":"66","severity":1,"message":"67","line":18,"column":13,"nodeType":"63","endLine":18,"endColumn":59},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"no-unused-vars","'validate' is defined but never used.","Identifier","unusedVar","'errorCode' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","jsx-a11y/no-redundant-roles","The element form has an implicit role of form. Defining this explicitly is redundant and should be avoided.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'axios' is defined but never used.","'data' is defined but never used.","'Container' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/jsx-pascal-case","Imported JSX component Item_block must be in PascalCase or SCREAMING_SNAKE_CASE","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'func' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]