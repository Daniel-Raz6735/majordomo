[{"C:\\Users\\shlomo\\Desktop\\majordomo\\src\\index.js":"1","C:\\Users\\shlomo\\Desktop\\majordomo\\src\\pages\\login page\\LoginPage.js":"2","C:\\Users\\shlomo\\Desktop\\majordomo\\src\\Dictionary.js":"3","C:\\Users\\shlomo\\Desktop\\majordomo\\src\\config\\firebaseConfig.js":"4","C:\\Users\\shlomo\\Desktop\\majordomo\\src\\pages\\Main user page\\MainUserPage.js":"5","C:\\Users\\shlomo\\Desktop\\majordomo\\src\\components\\containers.jsx":"6","C:\\Users\\shlomo\\Desktop\\majordomo\\src\\components\\notifications.jsx":"7","C:\\Users\\shlomo\\Desktop\\majordomo\\src\\components\\bars.jsx":"8"},{"size":276,"mtime":1610930196686,"results":"9","hashOfConfig":"10"},{"size":6164,"mtime":1610628469884,"results":"11","hashOfConfig":"10"},{"size":3536,"mtime":1610930386041,"results":"12","hashOfConfig":"10"},{"size":661,"mtime":1610459349628,"results":"13","hashOfConfig":"10"},{"size":3266,"mtime":1610930376165,"results":"14","hashOfConfig":"10"},{"size":2153,"mtime":1610930342605,"results":"15","hashOfConfig":"10"},{"size":5038,"mtime":1610934303101,"results":"16","hashOfConfig":"10"},{"size":667,"mtime":1610930345218,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"17ximuj",{"filePath":"21","messages":"22","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"20"},"C:\\Users\\shlomo\\Desktop\\majordomo\\src\\index.js",[],["41","42"],"C:\\Users\\shlomo\\Desktop\\majordomo\\src\\pages\\login page\\LoginPage.js",["43","44","45","46","47","48"],"import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport './LoginPage.css';\r\nimport $ from 'jquery';\r\nimport { auth } from '../../config/firebaseConfig';\r\nimport MainUserPage from '../Main user page/MainUserPage'\r\nimport {Dictionary, LangBtn} from '../../Dictionary'\r\nimport { validate } from 'jquery-validation';\r\n// require('jquery-validation');\r\n\r\n\r\n\r\nclass LoginPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.login = this.login.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.state = {\r\n            email: {},\r\n            password: {},\r\n        }\r\n    }\r\n\r\n    login(e) {\r\n        e.preventDefault();\r\n        $(\"#login_form\").validate({\r\n            // Specify validation rules\r\n            rules: {\r\n                email: {\r\n                    required: true,\r\n                    minlength: 1,\r\n                    email: true,\r\n                },\r\n                password: {\r\n                    required: true,\r\n                    minlength: 1,\r\n                },\r\n            },\r\n            messages: {}\r\n        });\r\n\r\n        if (!$(\"#login_form\").valid()) return;\r\n        auth.signInWithEmailAndPassword(this.state.email, this.state.password).then(() => {\r\n            window.location.reload();\r\n        }).catch(function (error) {\r\n            var errorCode = error.code;\r\n            var errorMessage = error.message;\r\n            // alert(errorCode + \" : \" + errorMessage);\r\n            $(\"#password\").val(\"\");\r\n        });\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"LPcover\" className=\"cover\">\r\n                <LangBtn/>\r\n                <div id=\"loginWrapper\" className=\"wrapper\">\r\n                    <div className=\"loginContainer\">\r\n                        <div id=\"buttonWrapper123\">\r\n                        <img src ='../images/icons/Majordomo logo.svg'></img>\r\n                            <form dir=\"RTL\" id=\"login_form\" name=\"login_form_name\" role=\"form\">\r\n                                < input type=\"email\"\r\n                                    id=\"email\"\r\n                                    name=\"email\"\r\n                                    placeholder={Dictionary.enterMail}\r\n                                    autoComplete='off'\r\n                                    defaultValue=\"\" required\r\n                                    onChange={this.handleChange}>\r\n                                </input>\r\n                                <a>‚Äè </a>\r\n                                < input type=\"password\"\r\n                                    id=\"password\"\r\n                                    name=\"password\"\r\n                                    placeholder={Dictionary.enterPass}\r\n                                    autoComplete='off'\r\n                                    defaultValue=\"\" required\r\n                                    onChange={this.handleChange}\r\n                                >\r\n                                </input>\r\n                                <button id=\"loginbtn\"\r\n                                    type=\"submit\"\r\n                                    text={Dictionary.login}\r\n                                    className=\"btn btn-success\"\r\n                                    onClick={this.login} >\r\n                                    {Dictionary.login}\r\n                                </button>\r\n                            </form>\r\n                        </div>\r\n                      \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default LoginPage;\r\n\r\n\r\n\r\nexport class LoginComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: false,\r\n            page: [],\r\n            permission: false,\r\n        }\r\n\r\n    }\r\n\r\n    // authListener() {\r\n    //     auth.onAuthStateChanged((user) => {\r\n    //         if (user) this.setState({ user });\r\n    //         else this.setState({ user: false });\r\n    //         console.log(user)\r\n    //     })\r\n    // }\r\n\r\n    // signOutFun() {\r\n    //     auth.signOut();\r\n    // }\r\n    timeRefresh() {\r\n        //reset page to main page if page is inactive for a half an hour\r\n        var time = new Date().getTime();\r\n        $(document.body).bind(\"mousemove keypress touchmove \", function () {\r\n            time = new Date().getTime();\r\n        });\r\n\r\n        setInterval(function () {\r\n            if ((new Date().getTime() - time >= 180000)) {\r\n                window.location.href = \"/\";\r\n            }\r\n        }, 1000);\r\n    }\r\n\r\n    componentDidMount() {\r\n        auth.onAuthStateChanged(user => {\r\n            console.log(user)\r\n            if (user){\r\n                this.renderAdminDiv(user)\r\n            }\r\n            else\r\n            this.setState({page:<LoginPage/>})\r\n        })\r\n\r\n    }\r\n\r\n    renderAdminDiv(user) {\r\n        \r\n       \r\n        ReactDOM.render(\r\n            <Router>\r\n                {/* <Route exact path=\"/\" component={() => <AdminPage Admin={this.state.permission} />} />\r\n                <Route path=\"/WomanPage/:id\" component={props => <WomanPage {...props} Admin={this.state.permission} />} />\r\n                <Route path=\"/Category\" component={() => <Category Admin={this.state.permission} />} /> */}\r\n                <Route exect path=\"/\" component={() => <MainUserPage Admin={this.state.permission} />}/>\r\n            </Router>, document.getElementById('root')\r\n        );\r\n    }\r\n\r\n    renderVisitorDiv(user) {\r\n        this.timeRefresh();\r\n        ReactDOM.render(\r\n            <Router>\r\n                <Route exact path=\"/\" component={MainUserPage} />\r\n                {/* <Route path=\"/WomanPage/:id\" component={props => <WomanPage {...props} />} />\r\n                <Route path=\"/Category\" component={Category} /> */}\r\n            </Router>, document.getElementById('root')\r\n        );\r\n    }\r\n\r\n    render() {\r\n\r\n        return <div id=\"renderDiv\"> {this.state.page}</div>\r\n\r\n    }\r\n}\r\n","C:\\Users\\shlomo\\Desktop\\majordomo\\src\\Dictionary.js",["49","50","51","52"],"import React from 'react';\r\nimport LocalizedStrings from 'react-localization';\r\nimport Dropdown, { DropdownContent, DropdownTrigger } from 'react-simple-dropdown';\r\nimport './Dictionary.css';\r\nimport globe from './images/globe.png';\r\nimport israelFlag from './images/icons/israel.svg';\r\nimport usaFlag from './images/icons/USA.svg';\r\nimport {base_url} from './index'\r\n\r\n\r\n/* LocalizedStrings is holding our Dictionary so that all of the pages wiil be able to be translated.\r\nto set a language you can call 'Dictionart.setLanguage([the language])'\r\nall pages can reference the text with 'Dictionery.[reference]\r\nthe references were devided to the main pages that is using them*/\r\nexport const Dictionary = new LocalizedStrings({\r\n  EN: {\r\n    //login page\r\n    enterMail: `Please enter email`,\r\n    enterPass: `Password`,\r\n    login: `Log in`, \r\n    signOut: `Sign out`,\r\n    inventory : \"show inventory\",\r\n\r\n    \r\n    \r\n    //containers\r\n    \r\n    //notifications\r\n    just_few:\"Just a few left\",\r\n    running_low:\"Running low\",\r\n    must_use:\"Must use ASAP\",\r\n    add_to_order :\"Add to order\",\r\n    suggest_dish :\"Suggest Dish\",\r\n\r\n\r\n    \r\n    \r\n  },\r\n  HE: {\r\n    //login page\r\n    enterMail: `◊ê◊†◊ê ◊î◊õ◊†◊ô◊° ◊ì◊ï◊ê''◊ú`,\r\n    enterPass: `◊ê◊†◊ê ◊î◊õ◊†◊° ◊°◊ô◊°◊û◊ê`,\r\n    login: `◊î◊™◊ó◊ë◊®`,\r\n    signOut: `◊î◊™◊†◊™◊ß`,\r\n    inventory : \"◊î◊¶◊í◊™ ◊û◊ú◊ê◊ô\",\r\n\r\n\r\n    //containers\r\n    add_to_order :\"◊î◊ï◊°◊£ ◊ú◊î◊ñ◊û◊†◊î\",\r\n    \r\n     //notifications\r\n     just_few:\"◊†◊ï◊™◊®◊ï ◊®◊ß ◊õ◊û◊î\",\r\n     running_low:\"◊ê◊ï◊ñ◊ú\",\r\n     must_use:\"◊¶◊®◊ô◊ö ◊ú◊î◊©◊™◊û◊© ◊ë◊ì◊ó◊ô◊§◊ï◊™\",\r\n    \r\n  }});\r\n\r\n  \r\n//language array\r\nexport const langs = [\"HE\", \"EN\"];\r\n\r\n//set language that is in the session Storage\r\nvar language = sessionStorage.getItem(\"current_language\");\r\nif (language === null) {\r\n  language = langs[0];\r\n}\r\nDictionary.setLanguage(language);\r\n\r\n//save new language in session storage and reload page\r\nfunction changeLanguage(lang) {\r\n  return function () {\r\n    sessionStorage.setItem(\"current_language\", lang);\r\n    window.location.reload();\r\n  }\r\n}\r\n//get the current page direction needed\r\nexport function getRTL(lang) {\r\n  let targetLang = lang ? lang : Dictionary.getLanguage();\r\n\r\n  switch (targetLang) {\r\n    case \"EN\":\r\n      return \"ltr\";\r\n    case \"HE\":\r\n    default:\r\n      return \"rtl\";\r\n  }\r\n\r\n\r\n}\r\n//sets a globe image with three language buttons \r\nexport const LangBtn = () => {\r\n  var currentLng = Dictionary.getLanguage();\r\n  var HEId = \"\",\r\n    ENId = \"\";\r\n\r\n  if (currentLng === \"EN\") ENId = \"chosen\";\r\n  else HEId = \"chosen\";\r\n\r\nvar lang_arr = {\"EN\":usaFlag,\"HE\":israelFlag} \r\n\r\n  return (\r\n    <div id=\"languages\">\r\n      <Dropdown >\r\n\r\n        <DropdownTrigger>\r\n          <div id=\"displayAndGlobe\">\r\n            <div>\r\n              <img src={lang_arr[Dictionary.getLanguage()]} id=\"globus\" alt=\"lang\" />\r\n            </div>\r\n          </div>\r\n        </DropdownTrigger>\r\n\r\n        <DropdownContent>\r\n\r\n          <ul id=\"langlist\">\r\n            <li>\r\n              <div className=\"flags\">\r\n              <img src={israelFlag} id={HEId} className=\"langButtons\" onClick={changeLanguage(\"HE\")}></img>\r\n              <div>◊¢◊ë◊®◊ô◊™</div>\r\n              </div>\r\n            </li>\r\n            <li>\r\n            <div className=\"flags\">\r\n              <img src ={usaFlag} id={ENId} className=\"langButtons \" onClick={changeLanguage(\"EN\")} ></img>\r\n              <div>English</div>\r\n            </div>\r\n            </li>\r\n          </ul>\r\n        </DropdownContent>\r\n      </Dropdown>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\shlomo\\Desktop\\majordomo\\src\\config\\firebaseConfig.js",["53"],"import  firebase from 'firebase'\r\nimport 'firebase/auth';\r\n\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBZN7e1k3080ug33Mozfe6kowulXLH0ADw\",\r\n    authDomain: \"majordomo-me.firebaseapp.com\",\r\n    databaseURL: \"https://majordomo-me-default-rtdb.firebaseio.com\",\r\n    projectId: \"majordomo-me\",\r\n    storageBucket: \"majordomo-me.appspot.com\",\r\n    messagingSenderId: \"213314761996\",\r\n    appId: \"1:213314761996:web:e9c6d9737bf213952c0529\",\r\n    measurementId: \"G-1X8TL73123\"\r\n  };\r\n\r\n  firebase.initializeApp(firebaseConfig);\r\n  export const auth = firebase.auth();\r\n\r\nexport default{firebase};","C:\\Users\\shlomo\\Desktop\\majordomo\\src\\pages\\Main user page\\MainUserPage.js",["54","55","56","57","58","59","60"],"import React, { Component } from 'react';\r\nimport { Dictionary, LangBtn } from '../../Dictionary'\r\nimport { auth } from '../../config/firebaseConfig'\r\nimport './MainUserPage.css'\r\nimport $, { data } from 'jquery';\r\nimport {Notification_block} from \"../../components/notifications\"\r\nimport {Item_block, Container} from \"../../components/containers\"\r\nimport {BottomBar} from \"../../components/bars\"\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport cart_plus from '../../images/icons/cart_plus.svg'\r\nimport logo from '../../images/icons/Majordomo logo.svg'\r\nimport {base_url} from '../../index'\r\n\r\n\r\n\r\n// function render_container(data){\r\n//     ReactDOM.render(<Container all_weights ={data}/>, document.getElementById('data_insert'));\r\n// }\r\n// weighing_date\r\n// container_id\r\n// weight_value\r\n// last_user\r\nfunction render_container(data){\r\n    //gets a list of weights and puts and renders the maximal  \r\n    var res = [];\r\n    var max = -Number.MAX_SAFE_INTEGER;\r\n    if (data){\r\n        data.forEach(element => {\r\n            res.push(<Item_block name={element[3]} weight ={element[1]} weight_date = {element[2]} />)\r\n        });\r\n    }\r\n    // res = <Item_block name=\"Agvania\" weight ={max} weight_date = \"20.1.12\" />\r\n    ReactDOM.render(res, document.getElementById('data_insert'));\r\n}\r\n\r\n\r\nfunction req_container(callback, user_id ,container_number){\r\n    //request a container  for somone or all of the containers for a user\r\n    var request = base_url+'/get/containers';\r\n\r\n    if (user_id){\r\n        request += \"?client_id=\"+user_id\r\n        if(container_number)\r\n            request += \"&container_id=\" + container_number\r\n    console.log(request)\r\n    $.ajax({\r\n        url: request, \r\n        success: function (res) {\r\n            callback(res);\r\n        },\r\n        error: function (err) {\r\n            // alert(err);\r\n        }\r\n    });\r\n    }\r\n    else{\r\n        console.log(\"no user id enterd. nothing happend\")\r\n    }\r\n    \r\n}\r\n\r\n\r\nclass MainUserPage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            page: [],\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n     \r\n       req_container(render_container,1)\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div id=\"main_user_page_container\">\r\n               \r\n                <Nav_bar/>\r\n                <div className=\"main_info_container\" >\r\n                <Notification_block/>\r\n                <div id =\"data_insert\"></div>\r\n                </div>\r\n                <BottomBar />\r\n       \r\n            </div>\r\n          \r\n        );\r\n\r\n    }\r\n}\r\nexport default MainUserPage\r\n\r\nexport class Nav_bar extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <header className=\"header\"> \r\n                <LangBtn />\r\n                <img alt=\"Majordomo logo\" id=\"majordomoLogo\" src ={logo} onClick={() => {window.location = '/';}}></img>\r\n                <button id=\"logoutBtn\" onClick={() => {\r\n                    auth.signOut()\r\n                    window.location.reload()\r\n                }} >{Dictionary.signOut}</button>\r\n                </header>\r\n        );\r\n\r\n    }\r\n}","C:\\Users\\shlomo\\Desktop\\majordomo\\src\\components\\containers.jsx",["61"],"import React, { Component } from 'react';\r\nimport { Dictionary } from '../Dictionary';\r\nimport \"./containers.css\"\r\nimport {base_url} from '../index'\r\n\r\n\r\n\r\nexport class Container extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            all_weights: props.all_weights,\r\n            page:[]\r\n            \r\n        }\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n    componentWillMount() {\r\n        var all_weights = this.state.all_weights\r\n        if(all_weights){\r\n            var page = []\r\n            console.log(all_weights)\r\n            all_weights.forEach(weight => {\r\n                var row = []\r\n                weight.forEach(element => {\r\n                     row.push(<td>{element}</td>)\r\n                });\r\n                page.push(<tr>{row}</tr>)\r\n            });\r\n            this.setState({page:page})\r\n        }\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <table><tr><th>container id</th><th>time eddad</th><th>item id</th><th>client id</th></tr>\r\n            {this.state.page}\r\n            </table>\r\n        )\r\n    }\r\n}\r\n\r\nexport class Item_block extends Component {\r\n    /* creates a squere containing an item object\r\n    input props:weight = the weight of the item\r\n                date weighd:\r\n    */\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: props.name,\r\n            weight: props.weight,\r\n            unit: props.unit?props.unit:\"kg\",\r\n            weight_date: props.weight_date,\r\n            color: props.color,\r\n            symbol: props.symbol\r\n                 \r\n        }\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"item_container\">\r\n            <div className = \"item_squere\">\r\n                <div>\r\n                    {this.state.name}\r\n                </div>\r\n               <div >{this.state.weight} {this.state.unit}</div>\r\n               <div>{this.state.weight_date} </div>\r\n                </div>\r\n            <div className=\"add_to_order\">{Dictionary.add_to_order}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n","C:\\Users\\shlomo\\Desktop\\majordomo\\src\\components\\notifications.jsx",["62"],"C:\\Users\\shlomo\\Desktop\\majordomo\\src\\components\\bars.jsx",["63","64","65","66","67"],"import \"./bars.css\"\r\nimport inventory from '../images/icons/inventory.svg'\r\nimport home from '../images/icons/home.svg'\r\nimport cart from '../images/icons/cart.svg'\r\nimport profile from '../images/icons/profile.svg'\r\nimport {base_url} from '../index'\r\n\r\n\r\nexport const BottomBar = (props) =>{\r\n\r\n    return(\r\n        <footer id = \"bottom-bar\">\r\n            <img className=\"bottom-bar-btn\" src={home} onClick={()=> alert(\"yess\")}></img>\r\n            <img className=\"bottom-bar-btn\" src={inventory}></img>\r\n            <img className=\"bottom-bar-btn\" src={cart}></img>\r\n            <img className=\"bottom-bar-btn\" src={profile}></img>\r\n        </footer>\r\n\r\n    )\r\n\r\n\r\n}",{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":9,"column":10,"nodeType":"74","messageId":"75","endLine":9,"endColumn":18},{"ruleId":"72","severity":1,"message":"76","line":47,"column":17,"nodeType":"74","messageId":"75","endLine":47,"endColumn":26},{"ruleId":"72","severity":1,"message":"77","line":48,"column":17,"nodeType":"74","messageId":"75","endLine":48,"endColumn":29},{"ruleId":"78","severity":1,"message":"79","line":65,"column":25,"nodeType":"80","endLine":65,"endColumn":72},{"ruleId":"81","severity":1,"message":"82","line":66,"column":29,"nodeType":"80","endLine":66,"endColumn":96},{"ruleId":"83","severity":1,"message":"84","line":75,"column":33,"nodeType":"80","endLine":75,"endColumn":36},{"ruleId":"72","severity":1,"message":"85","line":5,"column":8,"nodeType":"74","messageId":"75","endLine":5,"endColumn":13},{"ruleId":"72","severity":1,"message":"86","line":8,"column":9,"nodeType":"74","messageId":"75","endLine":8,"endColumn":17},{"ruleId":"78","severity":1,"message":"79","line":118,"column":15,"nodeType":"80","endLine":118,"endColumn":102},{"ruleId":"78","severity":1,"message":"79","line":124,"column":15,"nodeType":"80","endLine":124,"endColumn":102},{"ruleId":"87","severity":1,"message":"88","line":19,"column":1,"nodeType":"89","endLine":19,"endColumn":26},{"ruleId":"72","severity":1,"message":"90","line":5,"column":13,"nodeType":"74","messageId":"75","endLine":5,"endColumn":17},{"ruleId":"72","severity":1,"message":"91","line":7,"column":21,"nodeType":"74","messageId":"75","endLine":7,"endColumn":30},{"ruleId":"72","severity":1,"message":"92","line":11,"column":8,"nodeType":"74","messageId":"75","endLine":11,"endColumn":17},{"ruleId":"72","severity":1,"message":"93","line":27,"column":9,"nodeType":"74","messageId":"75","endLine":27,"endColumn":12},{"ruleId":"94","severity":1,"message":"95","line":30,"column":22,"nodeType":"80","endLine":30,"endColumn":102},{"ruleId":"94","severity":1,"message":"96","line":87,"column":17,"nodeType":"80","endLine":87,"endColumn":27},{"ruleId":"94","severity":1,"message":"97","line":89,"column":17,"nodeType":"80","endLine":89,"endColumn":38},{"ruleId":"72","severity":1,"message":"86","line":4,"column":9,"nodeType":"74","messageId":"75","endLine":4,"endColumn":17},{"ruleId":"78","severity":1,"message":"79","line":159,"column":17,"nodeType":"80","endLine":159,"endColumn":68},{"ruleId":"72","severity":1,"message":"86","line":6,"column":9,"nodeType":"74","messageId":"75","endLine":6,"endColumn":17},{"ruleId":"78","severity":1,"message":"79","line":13,"column":13,"nodeType":"80","endLine":13,"endColumn":85},{"ruleId":"78","severity":1,"message":"79","line":14,"column":13,"nodeType":"80","endLine":14,"endColumn":61},{"ruleId":"78","severity":1,"message":"79","line":15,"column":13,"nodeType":"80","endLine":15,"endColumn":56},{"ruleId":"78","severity":1,"message":"79","line":16,"column":13,"nodeType":"80","endLine":16,"endColumn":59},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"no-unused-vars","'validate' is defined but never used.","Identifier","unusedVar","'errorCode' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/no-redundant-roles","The element form has an implicit role of form. Defining this explicitly is redundant and should be avoided.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'globe' is defined but never used.","'base_url' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'data' is defined but never used.","'Container' is defined but never used.","'cart_plus' is defined but never used.","'max' is assigned a value but never used.","react/jsx-pascal-case","Imported JSX component Item_block must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Nav_bar must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Notification_block must be in PascalCase or SCREAMING_SNAKE_CASE","no-global-assign","no-unsafe-negation"]