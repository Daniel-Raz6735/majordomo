[{"C:\\Users\\Daniel Raz\\Desktop\\majordomo\\src\\index.js":"1","C:\\Users\\Daniel Raz\\Desktop\\majordomo\\src\\pages\\login page\\LoginPage.js":"2","C:\\Users\\Daniel Raz\\Desktop\\majordomo\\src\\Dictionary.js":"3","C:\\Users\\Daniel Raz\\Desktop\\majordomo\\src\\config\\firebaseConfig.js":"4","C:\\Users\\Daniel Raz\\Desktop\\majordomo\\src\\pages\\Main user page\\MainUserPage.js":"5","C:\\Users\\Daniel Raz\\Desktop\\majordomo\\src\\pages\\inventory_page.jsx":"6","C:\\Users\\Daniel Raz\\Desktop\\majordomo\\src\\components\\containers.jsx":"7","C:\\Users\\Daniel Raz\\Desktop\\majordomo\\src\\components\\bars.jsx":"8","C:\\Users\\Daniel Raz\\Desktop\\majordomo\\src\\components\\notifications.jsx":"9","C:\\Users\\Daniel Raz\\Desktop\\majordomo\\src\\components\\drawer.jsx":"10"},{"size":368,"mtime":1611749872488,"results":"11","hashOfConfig":"12"},{"size":5454,"mtime":1611743291277,"results":"13","hashOfConfig":"12"},{"size":3881,"mtime":1611755025966,"results":"14","hashOfConfig":"12"},{"size":661,"mtime":1608115850012,"results":"15","hashOfConfig":"12"},{"size":2566,"mtime":1611692870117,"results":"16","hashOfConfig":"12"},{"size":1197,"mtime":1611755208855,"results":"17","hashOfConfig":"12"},{"size":2938,"mtime":1611088525994,"results":"18","hashOfConfig":"12"},{"size":1742,"mtime":1611752133353,"results":"19","hashOfConfig":"12"},{"size":7260,"mtime":1611743271391,"results":"20","hashOfConfig":"12"},{"size":1608,"mtime":1611754191504,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"hupcg5",{"filePath":"24","messages":"25","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"27"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"27"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"27"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"27"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Daniel Raz\\Desktop\\majordomo\\src\\index.js",[],"C:\\Users\\Daniel Raz\\Desktop\\majordomo\\src\\pages\\login page\\LoginPage.js",["48","49","50","51","52","53"],"import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport './LoginPage.css';\r\nimport $ from 'jquery';\r\nimport { auth } from '../../config/firebaseConfig';\r\nimport MainUserPage from '../Main user page/MainUserPage'\r\nimport {Dictionary, LangBtn} from '../../Dictionary'\r\nimport { validate } from 'jquery-validation';\r\nimport InventoryPage from '../inventory_page';\r\n// require('jquery-validation');\r\n\r\n\r\n\r\nclass LoginPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.login = this.login.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.state = {\r\n            email: {},\r\n            password: {},\r\n        }\r\n    }\r\n\r\n    login(e) {\r\n        e.preventDefault();\r\n        $(\"#login_form\").validate({\r\n            // Specify validation rules\r\n            rules: {\r\n                email: {\r\n                    required: true,\r\n                    minlength: 1,\r\n                    email: true,\r\n                },\r\n                password: {\r\n                    required: true,\r\n                    minlength: 1,\r\n                },\r\n            },\r\n            messages: {}\r\n        });\r\n\r\n        if (!$(\"#login_form\").valid()) return;\r\n        auth.signInWithEmailAndPassword(this.state.email, this.state.password).then(() => {\r\n            window.location.reload();\r\n        }).catch(function (error) {\r\n            var errorCode = error.code;\r\n            var errorMessage = error.message;\r\n            // alert(errorCode + \" : \" + errorMessage);\r\n            $(\"#password\").val(\"\");\r\n        });\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"LPcover\" className=\"cover\">\r\n                <LangBtn/>\r\n                <div id=\"loginWrapper\" className=\"wrapper\">\r\n                    <div className=\"loginContainer\">\r\n                        <div id=\"buttonWrapper123\">\r\n                        <img src ='../images/icons/Majordomo logo.svg'></img>\r\n                            <form dir=\"RTL\" id=\"login_form\" name=\"login_form_name\" role=\"form\">\r\n                                < input type=\"email\"\r\n                                    id=\"email\"\r\n                                    name=\"email\"\r\n                                    placeholder={Dictionary.enterMail}\r\n                                    autoComplete='off'\r\n                                    defaultValue=\"\" required\r\n                                    onChange={this.handleChange}>\r\n                                </input>\r\n                                <a>‚Äè </a>\r\n                                < input type=\"password\"\r\n                                    id=\"password\"\r\n                                    name=\"password\"\r\n                                    placeholder={Dictionary.enterPass}\r\n                                    autoComplete='off'\r\n                                    defaultValue=\"\" required\r\n                                    onChange={this.handleChange}\r\n                                >\r\n                                </input>\r\n                                <button id=\"loginbtn\"\r\n                                    type=\"submit\"\r\n                                    text={Dictionary.login}\r\n                                    className=\"btn btn-success\"\r\n                                    onClick={this.login} >\r\n                                    {Dictionary.login}\r\n                                </button>\r\n                            </form>\r\n                        </div>\r\n                      \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default LoginPage;\r\n\r\n\r\n\r\nexport class LoginComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: false,\r\n            page: [],\r\n            permission: false,\r\n        }\r\n\r\n    }\r\n\r\n    authListener() {\r\n        auth.onAuthStateChanged((user) => {\r\n            if (user) this.setState({ user });\r\n            else this.setState({ user: false });\r\n            console.log(user)\r\n        })\r\n    }\r\n\r\n    signOutFun() {\r\n        auth.signOut();\r\n    }\r\n    timeRefresh() {\r\n        //reset page to main page if page is inactive for a half an hour\r\n        var time = new Date().getTime();\r\n        $(document.body).bind(\"mousemove keypress touchmove \", function () {\r\n            time = new Date().getTime();\r\n        });\r\n\r\n        setInterval(function () {\r\n            if ((new Date().getTime() - time >= 180000)) {\r\n                window.location.href = \"/\";\r\n            }\r\n        }, 1000);\r\n    }\r\n\r\n    componentDidMount() {\r\n        auth.onAuthStateChanged(user => {\r\n            console.log(user)\r\n            if (user){\r\n                this.renderAdminDiv(user)\r\n            }\r\n            else\r\n                this.setState({page:<LoginPage/>})\r\n        })\r\n\r\n    }\r\n\r\n    renderAdminDiv(user) {\r\n        ReactDOM.render(\r\n            <Router>\r\n                <Route path = \"/inventory\" component = {InventoryPage}/>\r\n                <Route exect path=\"/HomePage\"  component={MainUserPage} />\r\n            </Router>, document.getElementById('root')\r\n        );\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        return <div id=\"renderDiv\"> {this.state.page}</div>\r\n\r\n    }\r\n}\r\n",["54","55"],"C:\\Users\\Daniel Raz\\Desktop\\majordomo\\src\\Dictionary.js",["56","57","58","59"],"C:\\Users\\Daniel Raz\\Desktop\\majordomo\\src\\config\\firebaseConfig.js",["60"],"import  firebase from 'firebase'\r\nimport 'firebase/auth';\r\n\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBZN7e1k3080ug33Mozfe6kowulXLH0ADw\",\r\n    authDomain: \"majordomo-me.firebaseapp.com\",\r\n    databaseURL: \"https://majordomo-me-default-rtdb.firebaseio.com\",\r\n    projectId: \"majordomo-me\",\r\n    storageBucket: \"majordomo-me.appspot.com\",\r\n    messagingSenderId: \"213314761996\",\r\n    appId: \"1:213314761996:web:e9c6d9737bf213952c0529\",\r\n    measurementId: \"G-1X8TL73123\"\r\n  };\r\n\r\n  firebase.initializeApp(firebaseConfig);\r\n  export const auth = firebase.auth();\r\n\r\nexport default{firebase};","C:\\Users\\Daniel Raz\\Desktop\\majordomo\\src\\pages\\Main user page\\MainUserPage.js",["61","62","63","64","65","66","67","68","69","70","71"],"import React, { Component } from 'react';\r\nimport { Dictionary, LangBtn } from '../../Dictionary'\r\nimport { auth } from '../../config/firebaseConfig'\r\nimport './MainUserPage.css'\r\nimport $, { data } from 'jquery';\r\nimport {Notification_block} from \"../../components/notifications\"\r\nimport {Item_block, Container} from \"../../components/containers\"\r\nimport {BottomBar, Nav_bar} from \"../../components/bars\"\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport cart_plus from '../../images/icons/cart_plus.svg'\r\nimport logo from '../../images/icons/Majordomo logo.svg'\r\nimport {base_url} from '../../index'\r\n\r\n\r\n\r\n// function render_container(data){\r\n//     ReactDOM.render(<Container all_weights ={data}/>, document.getElementById('data_insert'));\r\n// }\r\n// weighing_date\r\n// container_id\r\n// weight_value\r\n// last_user\r\nfunction render_container(data){\r\n    //gets a list of weights and puts and renders the maximal  \r\n    var res = [];\r\n    var max = -Number.MAX_SAFE_INTEGER;\r\n    if (data){\r\n        data.forEach(element => {\r\n            console.log(element)\r\n            res.push(<Item_block name={element[\"item_name\"]} weight ={element[\"weight\"]} weight_date = {element[\"date\"]} />)\r\n        });\r\n    }\r\n    ReactDOM.render(res, document.getElementById('data_insert'));\r\n}\r\n\r\n\r\n\r\n\r\nfunction req_weights(callback, user_id ,item_id=null){\r\n    //request a container  for somone or all of the containers for a user\r\n    var request = base_url+'/get/current_weights';\r\n\r\n    if (user_id){\r\n        request += \"?business_id=\"+user_id\r\n        if(item_id)\r\n            request += \"&item_id=\" + item_id\r\n    console.log(request)\r\n    $.ajax({\r\n        url: request, \r\n        success: function (res) {\r\n            callback(res);\r\n        },\r\n        error: function (err) {\r\n            // alert(err);\r\n        }\r\n    });\r\n    }\r\n    else{\r\n        console.log(\"no user id enterd. nothing happend\")\r\n    }\r\n    \r\n}\r\n\r\n\r\nclass MainUserPage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            page: [],\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n     \r\n       req_weights(render_container,1)\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div id=\"main_user_page_container\">\r\n                <Nav_bar/>\r\n                <div className=\"main_info_container\" >\r\n                <Notification_block/>\r\n                <div id =\"data_insert\"></div>\r\n                </div>\r\n                <BottomBar />\r\n       \r\n            </div>\r\n          \r\n        );\r\n\r\n    }\r\n}\r\nexport default MainUserPage\r\n\r\n","C:\\Users\\Daniel Raz\\Desktop\\majordomo\\src\\pages\\inventory_page.jsx",["72","73"],"C:\\Users\\Daniel Raz\\Desktop\\majordomo\\src\\components\\containers.jsx",["74","75","76"],"import React, { Component } from 'react';\r\nimport { Dictionary } from '../Dictionary';\r\nimport \"./containers.css\"\r\nimport {base_url} from '../index'\r\n\r\n\r\n\r\nexport class Container extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            all_weights: props.all_weights,\r\n            page:[]\r\n            \r\n        }\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n    componentWillMount() {\r\n        var all_weights = this.state.all_weights\r\n        if(all_weights){\r\n            var page = []\r\n            console.log(all_weights)\r\n            all_weights.forEach(weight => {\r\n                var row = []\r\n                weight.forEach(element => {\r\n                     row.push(<td>{element}</td>)\r\n                });\r\n                page.push(<tr>{row}</tr>)\r\n            });\r\n            this.setState({page:page})\r\n        }\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <table><tr><th>container id</th><th>time eddad</th><th>item id</th><th>client id</th></tr>\r\n            {this.state.page}\r\n            </table>\r\n        )\r\n    }\r\n}\r\n\r\nexport class Item_block extends Component {\r\n    /* creates a squere containing an item object\r\n    input props:weight = the weight of the item\r\n                date weighd:\r\n    */\r\n    constructor(props) {\r\n        super(props);\r\n        var date =  getDate(props.weight_date);\r\n\r\n        this.state = {\r\n            name: props.name,\r\n            weight: props.weight,\r\n            unit: props.unit?props.unit:\"kg\",\r\n            weight_date: date,\r\n            color: props.color,\r\n            symbol: props.symbol\r\n                 \r\n        }\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <div id={this.props.id} className=\"item_container\">\r\n            <div className = \"item_squere\">\r\n                <div>\r\n                    {this.state.name}\r\n                </div>\r\n               <div >{this.state.weight} {this.state.unit}</div>\r\n               <div>{this.state.weight_date} </div>\r\n                </div>\r\n            <div className=\"add_to_order\">{Dictionary.add_to_order}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction getDate(elementDate){\r\n\r\n    if(!elementDate)\r\n        return Dictionary[\"unknown_date\"]\r\n    var temp =  Date.now()\r\n    var now = new Date(temp)\r\n    var dataTime = new Date(elementDate)\r\n    var str\r\n\r\n            if((now.getMonth()+1 == dataTime.getMonth()+1) && (now.getDate() == dataTime.getDate()))\r\n            {\r\n                let hour = dataTime.getHours()\r\n                let minutes = dataTime.getMinutes()\r\n                let Seconds = dataTime.getSeconds()\r\n\r\n                str = hour +\":\"+minutes+\":\"+Seconds\r\n            }\r\n            else\r\n                str = dataTime.getDate() + \"/\" +  (dataTime.getMonth()+1) +\"/\" + dataTime.getFullYear()\r\n        \r\n            return str.toString()\r\n}\r\n\r\n\r\n","C:\\Users\\Daniel Raz\\Desktop\\majordomo\\src\\components\\bars.jsx",["77","78","79","80","81"],"C:\\Users\\Daniel Raz\\Desktop\\majordomo\\src\\components\\notifications.jsx",["82","83","84","85"],"import React, { Component } from 'react';\r\nimport \"./notifications.css\"\r\nimport yellow_warning from '../images/icons/triangle_warning.svg'\r\nimport circle_warning from '../images/icons/circle red warning.svg'\r\nimport cart_plus from '../images/icons/cart_plus.svg'\r\nimport suggest_dish from '../images/icons/suggest_dish.svg'\r\nimport overflow_sign from '../images/icons/overflow sign.svg'\r\nimport { Dictionary } from '../Dictionary';\r\nimport {base_url} from '../index'\r\nimport $ from 'jquery'\r\nimport ReactDOM from 'react-dom'\r\nimport { Item_block } from './containers';\r\n\r\n\r\nexport class Notification_category extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        var arr = [cart_plus,suggest_dish] \r\n        var text_descp = [Dictionary[\"add_to_order\"],Dictionary[\"suggest_dish\"]] \r\n        \r\n        // var mess = action_by_number[props.number].message,\r\n        // image = action_by_number[props.number].action,\r\n        // desc = action_by_number[props.number].action_desc\r\n \r\n        // this.state = {\r\n        //     symbols: [],\r\n        //     number:props.number,            \r\n        //     item_name:props.item_name,\r\n        //     total_weight: props.total_weight, \r\n        //     message:props.message?this.state.message:mess,\r\n        //     action_image: image ,\r\n        //     action_desc:desc,\r\n        // }\r\n    }\r\n    componentWillMount(){\r\n        // var action_by_number = {\r\n        //     0:{\"action\":arr[0],\"action_desc\":text_descp[0],\"message\":Dictionary[\"just_few\"]},\r\n        //     1:{\"action\":arr[0],\"action_desc\":text_descp[0],\"message\":Dictionary[\"running_low\"]},\r\n        //     2:{\"action\":arr[1],\"action_desc\":text_descp[1],\"message\":Dictionary[\"must_use\"]}\r\n        //     };\r\n        \r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n            <div className = \"notification_container\">\r\n                {/* <div className=\"center_items left_notification_area\">\r\n                <img src ={this.state.action_image} className=\"notification_image left_img\" alt={this.state.action_desc}/>\r\n                {this.state.action_desc}\r\n                </div>\r\n                <div className=\"center_items notification_item_name\">\r\n                {this.state.item_name}\r\n                </div>\r\n                <div className=\"center_items notification_weight\">\r\n                <div>{this.state.total_weight}</div>\r\n                </div>\r\n\r\n                <div className = \"notification center_items\">\r\n                    {this.state.message}\r\n                </div>\r\n               <NotificationSymbol symbolNumber={this.state.number}/>                 */}\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nfunction get_notifications(callback, client_id){\r\n    //request all notifications for a business\r\n    var request = base_url+'/get/notifications';\r\n\r\n    if (client_id){\r\n        request += \"?business_id=\"+ client_id + \"&active=true\"\r\n    console.log(request)\r\n    $.ajax({\r\n        url: request, \r\n        success: function (res) {\r\n            callback(res);\r\n        },\r\n        error: function (err) {\r\n            console.log(err)\r\n        }\r\n    });\r\n    }\r\n    else{\r\n        console.log(\"no user id enterd. nothing happend\")\r\n    }\r\n    \r\n}\r\n\r\nfunction process_notifications(data){\r\n    var page = []\r\n    \r\n    \r\n    if(typeof(data)==\"object\")\r\n\r\n        data.forEach(element => {\r\n            console.log(element)\r\n\r\n            page.push(<Notification number={element[\"code\"]%3} item_name={element[\"item_name\"]} total_weight={element[\"weight\"]} />)\r\n        });\r\n    ReactDOM.render( <div id =\"first_notification\" className=\"notification_block\">{page}<div id =\"insert_div\"></div></div>,document.getElementById('first_notification'))\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport class Notification_block extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            status:props.status,\r\n            number:props.number,\r\n            page: [],\r\n            action:props.action\r\n                 \r\n        }\r\n    }\r\n\r\n\r\n\r\n    componentWillMount(){\r\n        get_notifications(process_notifications,1)\r\n    }\r\n    render(){\r\n\r\n\r\n        return(\r\n            <div id =\"first_notification\" className=\"notification_block\">\r\n                {/* <Notification number={0} item_name=\"red\" total_weight={26} />\r\n                <Notification  number={1} item_name=\"yellow\" total_weight={26}/>\r\n                <Notification number={2} item_name=\"orange\" total_weight={26}/> */}\r\n                </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport class Notification extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        var arr = [cart_plus,suggest_dish] \r\n        var text_descp = [Dictionary[\"add_to_order\"],Dictionary[\"suggest_dish\"]] \r\n        var action_by_number = {\r\n                                0:{\"action\":arr[0],\"action_desc\":text_descp[0],\"message\":Dictionary[\"just_few\"]},\r\n                                1:{\"action\":arr[0],\"action_desc\":text_descp[0],\"message\":Dictionary[\"running_low\"]},\r\n                                2:{\"action\":arr[1],\"action_desc\":text_descp[1],\"message\":Dictionary[\"must_use\"]}\r\n        };\r\n        var mess = action_by_number[props.number].message,\r\n        image = action_by_number[props.number].action,\r\n        desc = action_by_number[props.number].action_desc\r\n \r\n        this.state = {\r\n            number:props.number,            \r\n            item_name:props.item_name,\r\n            total_weight: props.total_weight, \r\n            message:props.message?this.state.message:mess,\r\n            action_image: image ,\r\n            action_desc:desc,\r\n        }\r\n    }\r\n    componentWillMount(){\r\n\r\n        \r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n            <div className = \"notification_container\">\r\n                <div className=\"center_items left_notification_area\">\r\n                <img src ={this.state.action_image} className=\"notification_image left_img\" alt={this.state.action_desc}/>\r\n                {this.state.action_desc}\r\n                </div>\r\n                <div className=\"center_items notification_item_name\">\r\n                {this.state.item_name}\r\n                </div>\r\n                <div className=\"center_items notification_weight\">\r\n                <div>{this.state.total_weight}</div>\r\n                </div>\r\n\r\n                <div className = \"notification center_items\">\r\n                    {this.state.message}\r\n                </div>\r\n               <NotificationSymbol symbolNumber={this.state.number}/>                \r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const NotificationSymbol= (props) =>{\r\n    // notification symbol by code \r\n    // 0 is a red circle, 1 is yellow tringle, 2, is green overflow dish    \r\n    var symbolArr = [circle_warning, yellow_warning, overflow_sign],\r\n        styleArr=[\"rgba(235, 104, 104, 0.32)\",\"rgba(247, 231, 185, 0.85)\",\"rgba(255, 103, 14, 0.2)\"]\r\n    var symbolNumber = props.symbolNumber, symbol = symbolArr[symbolNumber],\r\n        color = {\"background-color\": styleArr[symbolNumber]}\r\n    \r\n    return(\r\n        <div className=\"notification_symbol_area center_items\" style={color}>\r\n                <img src ={symbol} className=\"notification_symbol\"></img>\r\n        </div>\r\n    )\r\n\r\n\r\n    \r\n\r\n}","C:\\Users\\Daniel Raz\\Desktop\\majordomo\\src\\components\\drawer.jsx",["86","87","88","89","90","91"],{"ruleId":"92","severity":1,"message":"93","line":9,"column":10,"nodeType":"94","messageId":"95","endLine":9,"endColumn":18},{"ruleId":"92","severity":1,"message":"96","line":48,"column":17,"nodeType":"94","messageId":"95","endLine":48,"endColumn":26},{"ruleId":"92","severity":1,"message":"97","line":49,"column":17,"nodeType":"94","messageId":"95","endLine":49,"endColumn":29},{"ruleId":"98","severity":1,"message":"99","line":66,"column":25,"nodeType":"100","endLine":66,"endColumn":72},{"ruleId":"101","severity":1,"message":"102","line":67,"column":29,"nodeType":"100","endLine":67,"endColumn":96},{"ruleId":"103","severity":1,"message":"104","line":76,"column":33,"nodeType":"100","endLine":76,"endColumn":36},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"92","severity":1,"message":"109","line":5,"column":8,"nodeType":"94","messageId":"95","endLine":5,"endColumn":13},{"ruleId":"92","severity":1,"message":"110","line":8,"column":9,"nodeType":"94","messageId":"95","endLine":8,"endColumn":17},{"ruleId":"98","severity":1,"message":"99","line":135,"column":15,"nodeType":"100","endLine":135,"endColumn":102},{"ruleId":"98","severity":1,"message":"99","line":141,"column":15,"nodeType":"100","endLine":141,"endColumn":102},{"ruleId":"111","severity":1,"message":"112","line":19,"column":1,"nodeType":"113","endLine":19,"endColumn":26},{"ruleId":"92","severity":1,"message":"114","line":2,"column":10,"nodeType":"94","messageId":"95","endLine":2,"endColumn":20},{"ruleId":"92","severity":1,"message":"115","line":2,"column":22,"nodeType":"94","messageId":"95","endLine":2,"endColumn":29},{"ruleId":"92","severity":1,"message":"116","line":3,"column":10,"nodeType":"94","messageId":"95","endLine":3,"endColumn":14},{"ruleId":"92","severity":1,"message":"117","line":5,"column":13,"nodeType":"94","messageId":"95","endLine":5,"endColumn":17},{"ruleId":"92","severity":1,"message":"118","line":7,"column":21,"nodeType":"94","messageId":"95","endLine":7,"endColumn":30},{"ruleId":"92","severity":1,"message":"119","line":11,"column":8,"nodeType":"94","messageId":"95","endLine":11,"endColumn":17},{"ruleId":"92","severity":1,"message":"120","line":12,"column":8,"nodeType":"94","messageId":"95","endLine":12,"endColumn":12},{"ruleId":"92","severity":1,"message":"121","line":27,"column":9,"nodeType":"94","messageId":"95","endLine":27,"endColumn":12},{"ruleId":"122","severity":1,"message":"123","line":31,"column":22,"nodeType":"100","endLine":31,"endColumn":124},{"ruleId":"122","severity":1,"message":"124","line":88,"column":17,"nodeType":"100","endLine":88,"endColumn":27},{"ruleId":"122","severity":1,"message":"125","line":90,"column":17,"nodeType":"100","endLine":90,"endColumn":38},{"ruleId":"126","severity":1,"message":"127","line":11,"column":5,"nodeType":"128","messageId":"129","endLine":14,"endColumn":6},{"ruleId":"122","severity":1,"message":"124","line":28,"column":16,"nodeType":"100","endLine":28,"endColumn":26},{"ruleId":"92","severity":1,"message":"110","line":4,"column":9,"nodeType":"94","messageId":"95","endLine":4,"endColumn":17},{"ruleId":"130","severity":1,"message":"131","line":91,"column":34,"nodeType":"132","messageId":"133","endLine":91,"endColumn":36},{"ruleId":"130","severity":1,"message":"131","line":91,"column":78,"nodeType":"132","messageId":"133","endLine":91,"endColumn":80},{"ruleId":"92","severity":1,"message":"110","line":6,"column":9,"nodeType":"94","messageId":"95","endLine":6,"endColumn":17},{"ruleId":"98","severity":1,"message":"99","line":20,"column":35,"nodeType":"100","endLine":20,"endColumn":108},{"ruleId":"98","severity":1,"message":"99","line":21,"column":35,"nodeType":"100","endLine":21,"endColumn":85},{"ruleId":"98","severity":1,"message":"99","line":22,"column":35,"nodeType":"100","endLine":22,"endColumn":79},{"ruleId":"98","severity":1,"message":"99","line":23,"column":36,"nodeType":"100","endLine":23,"endColumn":83},{"ruleId":"92","severity":1,"message":"134","line":12,"column":10,"nodeType":"94","messageId":"95","endLine":12,"endColumn":20},{"ruleId":"92","severity":1,"message":"135","line":19,"column":13,"nodeType":"94","messageId":"95","endLine":19,"endColumn":16},{"ruleId":"92","severity":1,"message":"136","line":20,"column":13,"nodeType":"94","messageId":"95","endLine":20,"endColumn":23},{"ruleId":"98","severity":1,"message":"99","line":221,"column":17,"nodeType":"100","endLine":221,"endColumn":68},{"ruleId":"92","severity":1,"message":"137","line":1,"column":18,"nodeType":"94","messageId":"95","endLine":1,"endColumn":24},{"ruleId":"92","severity":1,"message":"138","line":1,"column":26,"nodeType":"94","messageId":"95","endLine":1,"endColumn":31},{"ruleId":"92","severity":1,"message":"139","line":1,"column":48,"nodeType":"94","messageId":"95","endLine":1,"endColumn":58},{"ruleId":"92","severity":1,"message":"140","line":2,"column":17,"nodeType":"94","messageId":"95","endLine":2,"endColumn":26},{"ruleId":"92","severity":1,"message":"141","line":3,"column":8,"nodeType":"94","messageId":"95","endLine":3,"endColumn":17},{"ruleId":"92","severity":1,"message":"142","line":4,"column":8,"nodeType":"94","messageId":"95","endLine":4,"endColumn":16},"no-unused-vars","'validate' is defined but never used.","Identifier","unusedVar","'errorCode' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/no-redundant-roles","The element form has an implicit role of form. Defining this explicitly is redundant and should be avoided.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-native-reassign",["143"],"no-negated-in-lhs",["144"],"'globe' is defined but never used.","'base_url' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'Dictionary' is defined but never used.","'LangBtn' is defined but never used.","'auth' is defined but never used.","'data' is defined but never used.","'Container' is defined but never used.","'cart_plus' is defined but never used.","'logo' is defined but never used.","'max' is assigned a value but never used.","react/jsx-pascal-case","Imported JSX component Item_block must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Nav_bar must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Notification_block must be in PascalCase or SCREAMING_SNAKE_CASE","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Item_block' is defined but never used.","'arr' is assigned a value but never used.","'text_descp' is assigned a value but never used.","'Button' is defined but never used.","'Radio' is defined but never used.","'RadioGroup' is defined but never used.","'Component' is defined but never used.","'Paragraph' is defined but never used.","'ReactDOM' is defined but never used.","no-global-assign","no-unsafe-negation"]